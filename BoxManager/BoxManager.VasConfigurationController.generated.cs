// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace DcmsMobile.BoxManager.Areas.BoxManager.Controllers
{
    public partial class VasConfigurationController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected VasConfigurationController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CustomerList()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CustomerList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CustomerVas()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CustomerVas);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditCustomerVas()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditCustomerVas);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult VerifyVasPattern()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VerifyVasPattern);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddNewVasConfiguration()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddNewVasConfiguration);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateConfigurationRemark()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateConfigurationRemark);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateConfiguration()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateConfiguration);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RemoveVasConfiguration()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RemoveVasConfiguration);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DisableVasConfiguration()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DisableVasConfiguration);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EnableVasConfiguration()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EnableVasConfiguration);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public VasConfigurationController Actions { get { return MVC_BoxManager.BoxManager.VasConfiguration; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "BoxManager";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "VasConfiguration";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "VasConfiguration";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string CustomerList = "CustomerList";
            public readonly string CustomerVas = "CustomerVas";
            public readonly string EditCustomerVas = "EditCustomerVas";
            public readonly string VerifyVasPattern = "VerifyVasPattern";
            public readonly string AddNewVasConfiguration = "AddNewVasConfiguration";
            public readonly string UpdateConfigurationRemark = "UpdateConfigurationRemark";
            public readonly string UpdateConfiguration = "UpdateConfiguration";
            public readonly string RemoveVasConfiguration = "RemoveVasConfiguration";
            public readonly string DisableVasConfiguration = "DisableVasConfiguration";
            public readonly string EnableVasConfiguration = "EnableVasConfiguration";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string CustomerList = "CustomerList";
            public const string CustomerVas = "CustomerVas";
            public const string EditCustomerVas = "EditCustomerVas";
            public const string VerifyVasPattern = "VerifyVasPattern";
            public const string AddNewVasConfiguration = "AddNewVasConfiguration";
            public const string UpdateConfigurationRemark = "UpdateConfigurationRemark";
            public const string UpdateConfiguration = "UpdateConfiguration";
            public const string RemoveVasConfiguration = "RemoveVasConfiguration";
            public const string DisableVasConfiguration = "DisableVasConfiguration";
            public const string EnableVasConfiguration = "EnableVasConfiguration";
        }


        static readonly ActionParamsClass_CustomerList s_params_CustomerList = new ActionParamsClass_CustomerList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CustomerList CustomerListParams { get { return s_params_CustomerList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CustomerList
        {
            public readonly string customerId = "customerId";
            public readonly string vasId = "vasId";
        }
        static readonly ActionParamsClass_CustomerVas s_params_CustomerVas = new ActionParamsClass_CustomerVas();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CustomerVas CustomerVasParams { get { return s_params_CustomerVas; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CustomerVas
        {
            public readonly string customerId = "customerId";
            public readonly string vasId = "vasId";
        }
        static readonly ActionParamsClass_EditCustomerVas s_params_EditCustomerVas = new ActionParamsClass_EditCustomerVas();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditCustomerVas EditCustomerVasParams { get { return s_params_EditCustomerVas; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditCustomerVas
        {
            public readonly string customerId = "customerId";
            public readonly string vasId = "vasId";
        }
        static readonly ActionParamsClass_VerifyVasPattern s_params_VerifyVasPattern = new ActionParamsClass_VerifyVasPattern();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_VerifyVasPattern VerifyVasPatternParams { get { return s_params_VerifyVasPattern; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_VerifyVasPattern
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_AddNewVasConfiguration s_params_AddNewVasConfiguration = new ActionParamsClass_AddNewVasConfiguration();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddNewVasConfiguration AddNewVasConfigurationParams { get { return s_params_AddNewVasConfiguration; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddNewVasConfiguration
        {
            public readonly string ivm = "ivm";
        }
        static readonly ActionParamsClass_UpdateConfigurationRemark s_params_UpdateConfigurationRemark = new ActionParamsClass_UpdateConfigurationRemark();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateConfigurationRemark UpdateConfigurationRemarkParams { get { return s_params_UpdateConfigurationRemark; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateConfigurationRemark
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_UpdateConfiguration s_params_UpdateConfiguration = new ActionParamsClass_UpdateConfiguration();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateConfiguration UpdateConfigurationParams { get { return s_params_UpdateConfiguration; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateConfiguration
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_RemoveVasConfiguration s_params_RemoveVasConfiguration = new ActionParamsClass_RemoveVasConfiguration();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RemoveVasConfiguration RemoveVasConfigurationParams { get { return s_params_RemoveVasConfiguration; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RemoveVasConfiguration
        {
            public readonly string customerId = "customerId";
            public readonly string vasId = "vasId";
        }
        static readonly ActionParamsClass_DisableVasConfiguration s_params_DisableVasConfiguration = new ActionParamsClass_DisableVasConfiguration();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DisableVasConfiguration DisableVasConfigurationParams { get { return s_params_DisableVasConfiguration; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DisableVasConfiguration
        {
            public readonly string customerId = "customerId";
            public readonly string vasId = "vasId";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_EnableVasConfiguration s_params_EnableVasConfiguration = new ActionParamsClass_EnableVasConfiguration();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EnableVasConfiguration EnableVasConfigurationParams { get { return s_params_EnableVasConfiguration; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EnableVasConfiguration
        {
            public readonly string customerId = "customerId";
            public readonly string vasId = "vasId";
            public readonly string model = "model";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _menuPartial = "_menuPartial";
                public readonly string CustomerVas = "CustomerVas";
                public readonly string DisableVasConfiguration = "DisableVasConfiguration";
                public readonly string EditCustomerVas = "EditCustomerVas";
                public readonly string EnableVasConfiguration = "EnableVasConfiguration";
                public readonly string Index = "Index";
                public readonly string VerifyVasPattern = "VerifyVasPattern";
            }
            public readonly string _menuPartial = "~/Areas/BoxManager/Views/VasConfiguration/_menuPartial.cshtml";
            public readonly string CustomerVas = "~/Areas/BoxManager/Views/VasConfiguration/CustomerVas.cshtml";
            public readonly string DisableVasConfiguration = "~/Areas/BoxManager/Views/VasConfiguration/DisableVasConfiguration.cshtml";
            public readonly string EditCustomerVas = "~/Areas/BoxManager/Views/VasConfiguration/EditCustomerVas.cshtml";
            public readonly string EnableVasConfiguration = "~/Areas/BoxManager/Views/VasConfiguration/EnableVasConfiguration.cshtml";
            public readonly string Index = "~/Areas/BoxManager/Views/VasConfiguration/Index.cshtml";
            public readonly string VerifyVasPattern = "~/Areas/BoxManager/Views/VasConfiguration/VerifyVasPattern.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_VasConfigurationController : DcmsMobile.BoxManager.Areas.BoxManager.Controllers.VasConfigurationController
    {
        public T4MVC_VasConfigurationController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CustomerListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string customerId, string vasId);

        [NonAction]
        public override System.Web.Mvc.ActionResult CustomerList(string customerId, string vasId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CustomerList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "customerId", customerId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "vasId", vasId);
            CustomerListOverride(callInfo, customerId, vasId);
            return callInfo;
        }

        [NonAction]
        partial void CustomerVasOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string customerId, string vasId);

        [NonAction]
        public override System.Web.Mvc.ActionResult CustomerVas(string customerId, string vasId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CustomerVas);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "customerId", customerId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "vasId", vasId);
            CustomerVasOverride(callInfo, customerId, vasId);
            return callInfo;
        }

        [NonAction]
        partial void EditCustomerVasOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string customerId, string vasId);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditCustomerVas(string customerId, string vasId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditCustomerVas);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "customerId", customerId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "vasId", vasId);
            EditCustomerVasOverride(callInfo, customerId, vasId);
            return callInfo;
        }

        [NonAction]
        partial void VerifyVasPatternOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, DcmsMobile.BoxManager.ViewModels.VasConfiguration.EditCustomerVasViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult VerifyVasPattern(DcmsMobile.BoxManager.ViewModels.VasConfiguration.EditCustomerVasViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.VerifyVasPattern);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            VerifyVasPatternOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void AddNewVasConfigurationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, DcmsMobile.BoxManager.ViewModels.VasConfiguration.IndexViewModel ivm);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddNewVasConfiguration(DcmsMobile.BoxManager.ViewModels.VasConfiguration.IndexViewModel ivm)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddNewVasConfiguration);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ivm", ivm);
            AddNewVasConfigurationOverride(callInfo, ivm);
            return callInfo;
        }

        [NonAction]
        partial void UpdateConfigurationRemarkOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, DcmsMobile.BoxManager.ViewModels.VasConfiguration.CustomerVasViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateConfigurationRemark(DcmsMobile.BoxManager.ViewModels.VasConfiguration.CustomerVasViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateConfigurationRemark);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            UpdateConfigurationRemarkOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void UpdateConfigurationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, DcmsMobile.BoxManager.ViewModels.VasConfiguration.EditCustomerVasViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateConfiguration(DcmsMobile.BoxManager.ViewModels.VasConfiguration.EditCustomerVasViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateConfiguration);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            UpdateConfigurationOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void RemoveVasConfigurationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string customerId, string vasId);

        [NonAction]
        public override System.Web.Mvc.ActionResult RemoveVasConfiguration(string customerId, string vasId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RemoveVasConfiguration);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "customerId", customerId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "vasId", vasId);
            RemoveVasConfigurationOverride(callInfo, customerId, vasId);
            return callInfo;
        }

        [NonAction]
        partial void DisableVasConfigurationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string customerId, string vasId);

        [NonAction]
        public override System.Web.Mvc.ActionResult DisableVasConfiguration(string customerId, string vasId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DisableVasConfiguration);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "customerId", customerId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "vasId", vasId);
            DisableVasConfigurationOverride(callInfo, customerId, vasId);
            return callInfo;
        }

        [NonAction]
        partial void DisableVasConfigurationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, DcmsMobile.BoxManager.ViewModels.VasConfiguration.DisableVasConfigurationViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult DisableVasConfiguration(DcmsMobile.BoxManager.ViewModels.VasConfiguration.DisableVasConfigurationViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DisableVasConfiguration);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            DisableVasConfigurationOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void EnableVasConfigurationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string customerId, string vasId);

        [NonAction]
        public override System.Web.Mvc.ActionResult EnableVasConfiguration(string customerId, string vasId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EnableVasConfiguration);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "customerId", customerId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "vasId", vasId);
            EnableVasConfigurationOverride(callInfo, customerId, vasId);
            return callInfo;
        }

        [NonAction]
        partial void EnableVasConfigurationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, DcmsMobile.BoxManager.ViewModels.VasConfiguration.EnableVasConfigurationViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult EnableVasConfiguration(DcmsMobile.BoxManager.ViewModels.VasConfiguration.EnableVasConfigurationViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EnableVasConfiguration);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            EnableVasConfigurationOverride(callInfo, model);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114

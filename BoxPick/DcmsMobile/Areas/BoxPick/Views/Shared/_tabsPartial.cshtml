@*
If ActiveTab is passed in ViewBag, then the tab which begins with the passed string is highlighted
Sample call:
@Html.Partial("_tabsPartial", Model, new ViewDataDictionary { { "ActiveTab", "Bu" } })

The containing div uses class=tabs so that you can specify device specific styles for this class.
*@
@model DcmsMobile.BoxPick.ViewModels.MasterModel
@{
    var list = new List<string>
               {
                   "Building",
                   "Pallet",
                   "Carton",
                   "Box"
               };
}
@helper LabelClasses(string currentTab)
    {
        string classes = "ui-button ui-widget ui-button-text-only";
        if (currentTab.StartsWith(ViewBag.ActiveTab))
        {
            classes += " ui-state-active";
        }
        else
        {
            classes += " ui-state-default";
        }
    @classes
}
@helper LabelText(IList<string> list, int index)
    {
        if (index == 0)
        {
    @Html.DisplayFor(m => m.CurrentBuildingId)
            if (!string.IsNullOrEmpty(Model.CurrentBuildingId) || !string.IsNullOrEmpty(Model.CurrentDestinationArea))
            {
@* The following line should not be indented so that a space does not show in label *@            
@:-@Html.DisplayFor(m => m.CurrentSourceAreaShortName) -> @Html.DisplayFor(m => m.CurrentDestAreaShortName)
        }
        }
        else
        {
    @list[index]
        }
}

<div class="tabs">
    @for (int i = 0; i < list.Count; ++i)
    {
        if (i > 0)
        {
        <span>&raquo;</span>
        }
        <label class="@LabelClasses(list[i])">
            <span class="ui-button-text">@LabelText(list, i)</span>
        </label>
    }
</div>





@*$Id$*@
@model DcmsMobile.CartonAreas.ViewModels.IndexViewModel
@{
    ViewBag.Title = "Buildings";
}

<div data-role="fieldcontain">
    <label> There are @Model.Buildings.Count Buildings.</label>
    <a href="@Url.Action(MVC_CartonAreas.CartonAreas.Home.EditBuilding())" class="ui-btn ui-icon-plus ui-btn-icon-right">Add Building</a>
</div>
<div id="buildinglist">
    <ul data-role="listview">
        @for (var i = 0; i < Model.Buildings.Count; i++)
        {
            <li data-role="list-divider">
                @(i + 1) @Html.DisplayFor(m => m.Buildings[i].BuildingId) : @Html.DisplayFor(m => m.Buildings[i].Description)
                <a href="@Url.Action(MVC_CartonAreas.CartonAreas.Home.EditBuilding(Model.Buildings[i].BuildingId))"
                   class="ui-btn ui-icon-edit ui-btn-icon-notext ui-btn-inline ui-mini" style="display:inline-block">Edit</a>
            </li>
            <li>
                <div class="ui-grid-a ui-responsive">
                    <div class="ui-block-a">
                        <div class="ui-field-contain">
                            <label>
                                Address
                            </label>
                            <div>
                                @if (!string.IsNullOrWhiteSpace(Model.Buildings[i].Address1))
                                {

                                @Html.DisplayFor(m => m.Buildings[i].Address1)
                                }
                                @if (!string.IsNullOrWhiteSpace(Model.Buildings[i].Address2))
                                {
                                @:,
                                @Html.DisplayFor(m => m.Buildings[i].Address2)
                                }

                                @if (!string.IsNullOrWhiteSpace(Model.Buildings[i].Address3))
                                {
                                @:,
                                @Html.DisplayFor(m => m.Buildings[i].Address3)
                                }
                                @if (!string.IsNullOrWhiteSpace(Model.Buildings[i].Address4))
                                {
                                @:,
                                @Html.DisplayFor(m => m.Buildings[i].Address4)
                                }
                                <div>
                                    @Html.DisplayFor(m => m.Buildings[i].City)
                                    @Html.DisplayFor(m => m.Buildings[i].State),
                                    @Html.DisplayFor(m => m.Buildings[i].ZipCode)
                                    @Html.DisplayFor(m => m.Buildings[i].CountryCode)
                                </div>
                            </div>
                        </div>
                        <div>
                            <a href="#editPalletLimit" data-rel="popup" data-limit="@Model.Buildings[i].ReceivingPalletLimit" data-building="@Model.Buildings[i].BuildingId"
                               class="ui-btn ui-icon-edit ui-btn-icon-right ui-mini ui-btn-inline">
                                @Html.DisplayFor(m => m.Buildings[i].ReceivingPalletLimit) Cartons per Pallet
                            </a>
                            <small>
                                Created
                                @Html.DisplayFor(m => m.Buildings[i].InsertDate) by @Html.DisplayFor(m => m.Buildings[i].InsertedBy)
                            </small>
                        </div>
                    </div>
                    <div class="ui-block-b">
                        <div>
                            <a href="@Url.Action(MVC_CartonAreas.CartonAreas.Home.CartonArea(Model.Buildings[i].BuildingId))" class="ui-btn ui-icon-carat-r ui-btn-icon-right">
                                @Html.DisplayFor(m => m.Buildings[i].CountCartonArea) Carton Areas
                                <p>@Html.DisplayFor(m => m.Buildings[i].CountNumberedArea) numbered. <em>@Html.DisplayFor(m => m.Buildings[i].CountLocation) locations</em></p>
                            </a>
                        </div>
                        <div>
                            <a href="@Url.Action(MVC_CartonAreas.CartonAreas.Home.PickingArea(Model.Buildings[i].BuildingId))" class="ui-btn  ui-icon-carat-r ui-btn-icon-right">
                                @Html.DisplayFor(m => m.Buildings[i].CountPickingAreas) Forward Stock Areas
                            </a>
                        </div>
                        @*<div>
                                <a href="#editPalletLimit" data-rel="popup" data-limit="@Model.Buildings[i].ReceivingPalletLimit" data-building="@Model.Buildings[i].BuildingId" class="ui-btn ui-icon-edit ui-btn-icon-right">
                                    Max Cartons on Pallet @Model.Buildings[i].ReceivingPalletLimit
                                </a>
                            </div>*@
                    </div>
                </div>
            </li>
        }
    </ul>
</div>
<div data-role="popup" id="editPalletLimit" data-dismissible="false">
    <h3>Building <span></span></h3>

    @using (Html.BeginForm(MVC_CartonAreas.CartonAreas.Home.EditPalletLimit(), FormMethod.Post))
    {
        <div class="ui-field-contain">
            <label for="tbEditPalletLimit">New Pallet Limit</label>
            <input id="tbEditPalletLimit" type="number" size="4"
                   name="@MVC_CartonAreas.CartonAreas.Home.EditPalletLimitParams.palletLimit" required="required" />
        </div>
        <input type="hidden" name="@MVC_CartonAreas.CartonAreas.Home.EditPalletLimitParams.buildingId">
        <button class="ui-btn ui-btn-inline" type="submit">Submit</button>
        <a href="#" class="ui-btn ui-corner-all ui-shadow ui-btn-inline ui-btn-b" data-rel="back">Cancel</a>
    }
    @*Receivers will receive a warning when this pallet limit is reached,
        but they will still be able to place more cartons on the pallet.*@
</div>

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            // When edit pallet limit is clicked, populate values in the dialog
            $('#buildinglist').on('click', 'a[href="#editPalletLimit"]', function (e) {
                $('#editPalletLimit')
                    .find('h3 span').text($(this).attr('data-building'))
                    .end().find('input[type="number"]').attr({
                        placeholder: 'Current Value ' + $(this).attr('data-limit')
                    }).end().find('input:hidden').val($(this).attr('data-building'));
                ;
            });
        });
    </script>
}




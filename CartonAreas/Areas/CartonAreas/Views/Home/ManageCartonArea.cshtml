@model DcmsMobile.CartonAreas.ViewModels.ManageCartonAreaViewModel
@{
    ViewBag.Title = "Manage Carton Area";
}
@helper TableCaption()
{

    @Model.Locations.Count
    @:of
    @Model.CountTotalLocations
    if (Model.Matrix.AssignedLocationsFilter.HasValue)
    {
        if (Model.Matrix.AssignedLocationsFilter.Value)
        {
            @:Assigned
        }
        else
        {
            @:Unassigned
        }
    }

    if (Model.Matrix.EmptyLocationsFilter.HasValue)
    {
        if (Model.Matrix.EmptyLocationsFilter.Value)
        {
            @:Empty
        }
        else
        {
            @:Non Empty
        }
    }

    @:Locations Displayed

    if (!string.IsNullOrWhiteSpace(Model.LocationPatternFilter))
    {
        @: Matching Pattern
        @Html.DisplayFor(m => m.LocationPatternFilter)
    }

    if (Model.AssignedToSkuFilter != null)
    {
        @:Assigned to SKU
        @Html.DisplayFor(m => m.AssignedToSkuFilter.DisplaySku)
    }

}
@helper UnassignButton(string locationId, bool enabled)
{
    var button = new TagBuilder("button");
    button.AddCssClass("mca-unassign"); //
    button.AddCssClass("ui-button"); //
    button.AddCssClass("ui-widget"); //
    button.AddCssClass("ui-state-default"); //
    button.AddCssClass("ui-corner-all"); //

    button.AddCssClass("ui-button-icon-only"); //
    button.Attributes.Add("title", "Unassign SKU");
    button.Attributes.Add("data-unassign-url", Url.Action(MVC_CartonAreas.CartonAreas.Home.UnassignLocation(locationId)));

    var span = new TagBuilder("span");
    span.AddCssClass("ui-button-icon-primary");
    span.AddCssClass("ui-icon");
    span.AddCssClass("ui-icon-close");

    var span2 = new TagBuilder("span");
    span2.AddCssClass("ui-button-text");

    button.InnerHtml = span.ToString() + span2.ToString();

    if (!enabled)
    {
        button.AddCssClass("ui-button-disabled");
        button.AddCssClass("ui-state-disabled");
        button.Attributes.Add("disabled", "disabled");
    }

    @Html.Raw(button)
}
@section sidebar {
    <div class="box boxA">
        <div class="boxContent">
            <ul>
                <li>
                    @Html.LabelFor(m => m.BuildingId)
                    @Html.DisplayFor(m => m.BuildingId)
                </li>
            </ul>
            @Html.ActionLink("Back to Carton Area List", MVC_CartonAreas.CartonAreas.Home.Actions.ManageCartonArea())
        </div>
    </div>
}

<h2>Carton Area : @Html.DisplayFor(m => m.ShortName)</h2>
<div class="box">
    <div class="boxContent designForm">
        <p>
            Start by selecting the type of locations you wish to see in the location list
        </p>
        <div id="divupdatefilter">
            @Html.Partial(MVC_CartonAreas.CartonAreas.Home.Views._cartonAreaLocationCountMatrixPartial, Model.Matrix)
        </div>
        @using (Html.BeginForm(MVC_CartonAreas.CartonAreas.Home.ApplyCartonAreaLocationFilter(), FormMethod.Get))
        {
            <p>Then you can refine the list further.</p>
            <input type="hidden" name="@MVC_CartonAreas.CartonAreas.Home.ApplyCartonAreaLocationFilterParams.assignedLocation" value="@Model.Matrix.AssignedLocationsFilter.ToString()" />
            <input type="hidden" name="@MVC_CartonAreas.CartonAreas.Home.ApplyCartonAreaLocationFilterParams.emptyLocations" value="@Model.Matrix.EmptyLocationsFilter.ToString()" />
            <input type="hidden" name="@MVC_CartonAreas.CartonAreas.Home.ApplyCartonAreaLocationFilterParams.areaId" value="@Model.Matrix.AreaId" id="hfAreaId" />
            <div>
                <label>Specific Locations</label>
                <input type="text" name="@MVC_CartonAreas.CartonAreas.Home.ApplyCartonAreaLocationFilterParams.locationId">
                <span> Use * as wildcard</span>

            </div>
            <div>
                <label>Assigned to SKU</label>
                <input type="hidden" name="@MVC_CartonAreas.CartonAreas.Home.ApplyCartonAreaLocationFilterParams.assignedSkuId" />
                <input type="text" name="skuText"
                       data-ac-list-url="@Url.Action(MVC_CartonAreas.CartonAreas.AutoComplete.SkusAssignedToCartonLocations())"
                       data-ac-validate-url="@Url.Action(MVC_CartonAreas.CartonAreas.AutoComplete.ValidateSku())"
                       data-ac-extra-param="@Model.Matrix.AreaId" />
                <sup>&darr;*</sup>
                <span data-ac-msg-for="skuText" class="sku-display"></span>
            </div>
            <button type="submit" id="btnAplyForFilter">Go</button>
        }
    </div>
</div>
<div class="box">
    @if (!string.IsNullOrWhiteSpace(Model.LocationPatternFilter) || Model.AssignedToSkuFilter != null)
    {
        <div style="font-size : 1.2em;">
            Filter applied
            @if (!string.IsNullOrWhiteSpace(Model.LocationPatternFilter))
            {
             @:Location :  @Html.DisplayFor(m => m.LocationPatternFilter)
            }
            @if (Model.AssignedToSkuFilter != null)
            {
             @:Sku :  @Html.DisplayFor(m => m.AssignedToSkuFilter.DisplaySku)
            }
            <a href="@Url.Action(MVC_CartonAreas.CartonAreas.Home.ManageCartonArea(Model.Matrix.AreaId))">Clear Filter</a>
        </div>
    }


    <div class="boxContent" id="divLocationList">
        <table>
            <caption>
                @TableCaption()
            </caption>
            <thead>
                <tr>
                    <th rowspan="2">#</th>
                    <th rowspan="2">
                        Location <span class="ui-icon ui-icon-triangle-1-n" style="display: inline-block"></span>
                    </th>
                    <th colspan="3" style="text-align: center">
                        Assigned
                    </th>
                    <th colspan="4" style="text-align: center">
                        Content
                    </th>
                    <th rowspan="2" style="text-align: center">
                        Change
                    </th>
                </tr>
                <tr>
                    <th style="text-align: center">
                        SKU
                    </th>
                    <th>
                        Capacity(Cartons)
                    </th>
                    <th>
                        VWH
                    </th>
                    <th>
                        # Pieces
                    </th>
                    <th>
                        # Cartons
                    </th>
                    <th>
                        SKU
                    </th>
                    <th>
                        # Pallets
                    </th>
                </tr>
            </thead>
            <tbody>
                @for (var i = 0; i < Model.Locations.Count; i++)
                {
                    <tr class="@(i % 2 == 0 ? "rowA" : "rowB")" data-location-id="@Model.Locations[i].LocationId" data-upc-code="@(Model.Locations[i].AssignedSku == null ? "" : Model.Locations[i].AssignedSku.UpcCode)">
                        <td>
                            @(i + 1)
                        </td>
                        <td>
                            @Html.DisplayFor(m => m.Locations[i].LocationId)
                        </td>
                        <td style="white-space: nowrap">
                            <span class="mca-sku">
                                @if (Model.Locations[i].AssignedSku != null)
                                {
                                    <span title="@Model.Locations[i].AssignedSku.UpcCode">
                                        @Html.DisplayFor(m => m.Locations[i].AssignedSku.DisplaySku)
                                    </span>
                                }
                            </span>
                        </td>

                        <td style="text-align: right">
                            <span class="mca-maxassignedcartons">
                                @Html.DisplayFor(m => m.Locations[i].MaxAssignedCartons)
                            </span>
                        </td>
                        <td style="text-align: right">
                            <span class="mca-vwh">
                                @Html.DisplayFor(m => m.Locations[i].AssignedVwhId)
                            </span>
                        </td>
                        <td style="text-align: right">
                            @Html.DisplayFor(m => m.Locations[i].TotalPieces)
                        </td>
                        <td style="text-align: right" title="@Model.Locations[i].PercentFull% full">
                            <div class="ui-progressbar ui-widget ui-widget-content ui-corner-all">
                                <div style="width: @Model.Locations[i].PercentFull%" class="ui-progressbar-value ui-widget-header ui-corner-left @(Model.Locations[i].MaxAssignedCartons.HasValue && Model.Locations[i].CartonCount >= Model.Locations[i].MaxAssignedCartons ? "ui-state-error" : "") ">
                                    <span class=" mca-cartoncount">
                                        @Html.DisplayFor(m => m.Locations[i].CartonCount)
                                    </span>
                                </div>
                            </div>
                        </td>
                        <td>
                            <span>
                                @if (Model.Locations[i].CartonSku != null)
                                {
                                    <span title="@Model.Locations[i].CartonSku.UpcCode">
                                        @Html.DisplayFor(m => m.Locations[i].CartonSku.DisplaySku)
                                    </span>
                                    if (Model.Locations[i].CartonSkuCount > 1)
                                    {
                                        <span class="ui-priority-primary">
                                            and @(Model.Locations[i].CartonSkuCount - 1)
                                            more
                                        </span>

                                    }
                                }
                            </span>
                        </td>
                        <td style="text-align: right">
                            @Html.DisplayFor(m => m.Locations[i].PalletCount)
                        </td>
                        <td style="white-space: nowrap">
                            <button title="Assign SKU" class="mca-assign ui-button ui-widget ui-state-default ui-corner-all ui-button-icon-only">
                                <span class="ui-button-icon-primary ui-icon ui-icon-pencil"></span><span class="ui-button-text">
                                </span>
                            </button>
                            @UnassignButton(Model.Locations[i].LocationId, Model.Locations[i].AssignedSku != null)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div id="divEditDialog" data-unassign-url="@Url.Action(MVC_CartonAreas.CartonAreas.Home.UnassignLocation())">
    @Html.Partial(MVC_CartonAreas.CartonAreas.Home.Views._assignSkuDialogPartial, Model.AssignedSku)
</div>

@section scripts {
    <style type="text/css">
        .ui-widget {
            font-size: 1em;
        }

        #divLocationList .ui-progressbar {
            height: 1.1em;
        }

            #divLocationList .ui-progressbar .ui-widget-header {
                color: Black;
                font-weight: normal;
            }
    </style>
    <script type="text/javascript" src="@Links_CartonAreas.Areas.CartonAreas.Scripts.ManageCartonAreas_all_js"></script>
}

@*
    $Id$
    $Revision$
    $URL$
    $Header$
    $Author$
    $Date$
*@ 
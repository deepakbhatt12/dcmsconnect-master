@model DcmsMobile.DcmsLite.ViewModels.Pick.IndexViewModel
@{
    if (!string.IsNullOrWhiteSpace(Model.CustomerId))
    {
        ViewBag.Title = "Pick Wave List for Customer " + Model.CustomerId;
    }
    else
    {
        ViewBag.Title = "Pick Wave List";
    }
}

@section sidebar {
    <div class="box boxA">
        <div class="boxContent">
            <form action="@Url.Action(MVC_DcmsLite.DcmsLite.Pick.Index())" method="GET">
               Show waves of Customer
                <input type="text" name="@MVC_DcmsLite.DcmsLite.Pick.IndexParams.customerId" value="@Model.CustomerId" />
                <input type="submit" value="Go" />
                @if (!string.IsNullOrWhiteSpace(Model.CustomerId))
                {
                    @Html.ActionLink("Clear filter", MVC_DcmsLite.DcmsLite.Pick.Index())
                }
            </form>
        </div>
    </div>

    <div class="box ">
        <div class="boxContent">
            @Html.ActionLink("DCMSLite Home", MVC_DcmsLite.DcmsLite.Home.Index())
        </div>
    </div>
    <div class="box ">
        <h3>Legend</h3>
        <div class="boxContent">
            <div style="text-align:center" class="ui-corner-all ui-state-highlight">
                In progress wave
            </div>
            <br/>
            <div style="text-align:center" class="ui-corner-all ui-state-active">
                Completed wave
            </div>
        </div>
    </div>
}

@if (Model.BucketListForPrinting.Any())
{
    <p>
        Pick waves for each building are listed below. Click on the Pick Wave to print labels for it.
    </p>   
}
<div style="text-align: center;padding-top:1em;padding-bottom: 0.5em;font-weight:bold">Displaying max 2000 active pick waves.</div>
<div id="tabs" data-selected-tab-index="@Model.SelectedTab">
    <ul>
        @for (var i = 0; i < Model.BucketListForPrinting.Count; ++i)
        { 
            <li><a href="#@Model.BucketListForPrinting[i].Key">@Model.BucketListForPrinting[i].Key</a></li>
        }
    </ul>

    @for (var i = 0; i < Model.BucketListForPrinting.Count; ++i)
    {
        <div id="@Model.BucketListForPrinting[i].Key">
            <table>
                <caption>List of Pick Waves for @Html.DisplayFor(m => m.BucketListForPrinting[i].Key)</caption>
                <thead>
                    <tr style="text-align: center">
                        <th>#</th>
                        <th style="white-space: nowrap">Customer <span class="ui-icon ui-icon-circle-triangle-s" style="display: inline-block"></span><sup>1</sup></th>
                        <th>Pick Wave<span class="ui-icon ui-icon-circle-triangle-s" style="display: inline-block"></span><sup>4</sup></th>
                        <th>PO/DC</th>
                        <th style="white-space: nowrap">Created<span class="ui-icon ui-icon-circle-triangle-s" style="display: inline-block"></span><sup>3</sup></th>
                        <td>#Labels
                            <div class="ui-progressbar ui-widget ui-widget-content ui-corner-all">
                                <div style="width: 40%;" class="ui-progressbar-value ui-corner-left ui-state-active">
                                    <div style="color: Black; white-space: nowrap; margin-left: 0.5em; margin-top: 0.5mm; overflow-x: hidden">
                                        Printed
                                    </div>
                                </div>
                                <div style="position: absolute; right: 1mm; top: 0px; overflow-x: hidden; font-weight: normal">
                                    Unprinted <span class="ui-icon ui-icon-circle-triangle-s" style="display: inline-block"></span><sup>2</sup>
                                </div>
                            </div>
                        </td>
                        <th>Labels Printed by</th>
                        <th>Labels Printed on
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @for (var j = 0; j < Model.BucketListForPrinting[i].Value.Length; j++)
                    {
                        <tr class="@(j % 2 == 0 ? "rowA" : "rowB")">
                            <td style="text-align: right">@(j + 1)</td>
                            @if (j == 0 || Model.BucketListForPrinting[i].Value[j].CustomerId != Model.BucketListForPrinting[i].Value[j - 1].CustomerId)
                            {
                                var span = Model.BucketListForPrinting[i].Value.Skip(j).TakeWhile(p => p.CustomerId == Model.BucketListForPrinting[i].Value[j].CustomerId).Count();
                                <td @(span > 1 ? "rowspan=" + span : "") style="vertical-align:top" class="row-span">
                                    @Html.DisplayFor(m => m.BucketListForPrinting[i].Value[j].Customer)
                                </td>
                            }
                            @if (j == 0 || Model.BucketListForPrinting[i].Value[j].BucketId != Model.BucketListForPrinting[i].Value[j - 1].BucketId)
                            {
                                var span = Model.BucketListForPrinting[i].Value.Skip(j).TakeWhile(p => p.BucketId == Model.BucketListForPrinting[i].Value[j].BucketId).Count();
                                <td @(span > 1 ? "rowspan=" + span : "") style="vertical-align:top;" class="row-span">
                                    @if (Model.BucketListForPrinting[i].Value[j].IsFrozen)
                                    {
                                        <span title="This Pick wave is frozen." class="ui-icon ui-icon-pause" style="display: inline-block"></span>
                                    }
                                    @if (Model.BucketListForPrinting[i].Value[j].TotalBoxes == 0)
                                    {
                                        @Model.BucketListForPrinting[i].Value[j].BucketId
                                    }
                                    else
                                    {
                                        @Html.ActionLink(Model.BucketListForPrinting[i].Value[j].BucketId.ToString(), MVC_DcmsLite.DcmsLite.Pick.Wave(Model.BucketListForPrinting[i].Value[j].BucketId)) <text> : </text> @Model.BucketListForPrinting[i].Value[j].BucketName    
                                    }
                                </td>
                            }
                            <td title="@Html.DisplayFor(m => m.BucketListForPrinting[i].Value[j].TotalPickslips) pickslips">
                                @Html.DisplayFor(m => m.BucketListForPrinting[i].Value[j].PoId) / @Html.DisplayFor(m => m.BucketListForPrinting[i].Value[j].CustomerDcId)
                            </td>
                            <td>@Html.DisplayFor(m => m.BucketListForPrinting[i].Value[j].CreationDate)</td>
                            <td>
                                @if (Model.BucketListForPrinting[i].Value[j].TotalBoxes > 0)
                                {
                                    <div title="@string.Format("{0:N0} of {1:N0} printed.  {2:N0}%",
                                    Model.BucketListForPrinting[i].Value[j].CountOfUccPrintedBoxes,
                                    Model.BucketListForPrinting[i].Value[j].TotalBoxes,
                                    Model.BucketListForPrinting[i].Value[j].PercentPrinted)" class="ui-progressbar ui-widget ui-widget-content ui-corner-all">
                                        <div style="width: @(Model.BucketListForPrinting[i].Value[j].PercentPrinted)%" class="ui-progressbar-value ui-corner-left @Html.Raw(Model.BucketListForPrinting[i].Value[j].CountOfUccUnprintedBoxes > 0 ? "ui-state-highlight" : "ui-state-active")">
                                            <div style="color: Black; white-space: nowrap; margin-left: 0.5em; margin-top: 0.5mm; overflow-x: hidden">
                                                @Html.DisplayFor(m => m.BucketListForPrinting[i].Value[j].CountOfUccPrintedBoxes)
                                            </div>
                                        </div>
                                        <div style="position: absolute; right: 1mm; top: 0px; overflow-x: hidden">
                                            @Html.DisplayFor(m => m.BucketListForPrinting[i].Value[j].CountOfUccUnprintedBoxes)
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <span>No Boxes</span>
                                }
                            </td>
                            <td>
                                <span title="@(Model.BucketListForPrinting[i].Value[j].CountPrintedBy > 1 ? string.Format("and {0} more", Model.BucketListForPrinting[i].Value[j].CountPrintedBy - 1) : "")">
                                    @Html.DisplayFor(m => m.BucketListForPrinting[i].Value[j].LastPrintedBy)
                                </span>
                            </td>
                            @if (Model.BucketListForPrinting[i].Value[j].MinPrintedOn == Model.BucketListForPrinting[i].Value[j].MaxPrintedOn)
                            {
                                <td>@Html.DisplayFor(m => m.BucketListForPrinting[i].Value[j].MaxPrintedOn) </td>
                            }
                            else
                            { 
                                <td>@Html.DisplayFor(m => m.BucketListForPrinting[i].Value[j].MinPrintedOn) -  @Html.DisplayFor(m => m.BucketListForPrinting[i].Value[j].MaxPrintedOn) </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>
@section scripts {
    <style type="text/css">
        div.ui-progressbar {
            width: 13em;
            height: 1.5em;
            position: relative;
        }

            div.ui-progressbar > div.ui-progressbar-value {
                color: Black;
                z-index: 100;
                position: absolute;
            }

        td.row-span[rowspan] {
            padding-top: 2mm;
            vertical-align: top;
            border-top: 1px solid;
            background-color: tan;
        }
    </style>
    <script src="@Links_DcmsLite.Areas.DcmsLite.Scripts.layout_js" type="text/javascript"></script>
    <script type="text/javascript">
        $('#tabs').tabs({ active: $('#tabs').attr('data-selected-tab-index') });
    </script>
}

// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC_DcmsMobile
{
    public static DcmsMobile.MainArea.Diagnostic.DiagnosticController Diagnostic = new DcmsMobile.MainArea.Diagnostic.T4MVC_DiagnosticController();
    public static DcmsMobile.MainArea.Home.HomeController Home = new DcmsMobile.MainArea.Home.T4MVC_HomeController();
    public static DcmsMobile.MainArea.Logon.LogonController Logon = new DcmsMobile.MainArea.Logon.T4MVC_LogonController();
    public static T4MVC.SharedViewsController SharedViews = new T4MVC.SharedViewsController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links_DcmsMobile
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/bootstrap.min.js") : Url("bootstrap.js")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/bootstrap.js");
                public static readonly string jquery_3_3_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-3.3.1.min.js") ? Url("jquery-3.3.1.min.js")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/jquery-3.3.1.min.js") : Url("jquery-3.3.1.js")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/jquery-3.3.1.js");
                public static readonly string jquery_3_3_1_slim_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-3.3.1.slim.min.js") ? Url("jquery-3.3.1.slim.min.js")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/jquery-3.3.1.slim.min.js") : Url("jquery-3.3.1.slim.js")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/jquery-3.3.1.slim.js");
                public static readonly string jquery_ui_1_11_4_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.11.4.min.js") ? Url("jquery-ui-1.11.4.min.js")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/jquery-ui-1.11.4.min.js") : Url("jquery-ui-1.11.4.js")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/jquery-ui-1.11.4.js");
                }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string bootstrap_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-theme.min.css") ? Url("bootstrap-theme.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/bootstrap-theme.min.css") : Url("bootstrap-theme.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/bootstrap-theme.css");
                public static readonly string bootstrap_theme_css_map = Url("bootstrap-theme.css.map")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/bootstrap-theme.css.map");
        public static readonly string bootstrap_theme_min_css_map = Url("bootstrap-theme.min.css.map")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/bootstrap-theme.min.css.map");
        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/bootstrap.min.css") : Url("bootstrap.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/bootstrap.css");
                public static readonly string bootstrap_css_map = Url("bootstrap.css.map")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/bootstrap.css.map");
        public static readonly string bootstrap_min_css_map = Url("bootstrap.min.css.map")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/bootstrap.min.css.map");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Sounds {
            private const string URLPATH = "~/Content/Sounds";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string Error_mp3 = Url("Error.mp3")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/Error.mp3");
            public static readonly string success_mp3 = Url("success.mp3")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/success.mp3");
            public static readonly string warning_mp3 = Url("warning.mp3")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/warning.mp3");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class themes {
            private const string URLPATH = "~/Content/themes";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class @base {
                private const string URLPATH = "~/Content/themes/base";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/accordion.min.css") ? Url("accordion.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/accordion.min.css") : Url("accordion.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/accordion.css");
                        public static readonly string all_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/all.min.css") ? Url("all.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/all.min.css") : Url("all.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/all.css");
                        public static readonly string autocomplete_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/autocomplete.min.css") ? Url("autocomplete.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/autocomplete.min.css") : Url("autocomplete.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/autocomplete.css");
                        public static readonly string base_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/base.min.css") ? Url("base.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/base.min.css") : Url("base.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/base.css");
                        public static readonly string button_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/button.min.css") ? Url("button.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/button.min.css") : Url("button.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/button.css");
                        public static readonly string core_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/core.min.css") ? Url("core.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/core.min.css") : Url("core.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/core.css");
                        public static readonly string datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datepicker.min.css") ? Url("datepicker.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/datepicker.min.css") : Url("datepicker.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/datepicker.css");
                        public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/dialog.min.css") : Url("dialog.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/dialog.css");
                        public static readonly string draggable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/draggable.min.css") ? Url("draggable.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/draggable.min.css") : Url("draggable.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/draggable.css");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    private const string URLPATH = "~/Content/themes/base/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menu.min.css") ? Url("menu.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/menu.min.css") : Url("menu.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/menu.css");
                        public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/progressbar.min.css") ? Url("progressbar.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/progressbar.min.css") : Url("progressbar.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/progressbar.css");
                        public static readonly string resizable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/resizable.min.css") ? Url("resizable.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/resizable.min.css") : Url("resizable.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/resizable.css");
                        public static readonly string selectable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/selectable.min.css") ? Url("selectable.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/selectable.min.css") : Url("selectable.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/selectable.css");
                        public static readonly string selectmenu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/selectmenu.min.css") ? Url("selectmenu.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/selectmenu.min.css") : Url("selectmenu.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/selectmenu.css");
                        public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider.min.css") ? Url("slider.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/slider.min.css") : Url("slider.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/slider.css");
                        public static readonly string sortable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sortable.min.css") ? Url("sortable.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/sortable.min.css") : Url("sortable.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/sortable.css");
                        public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spinner.min.css") ? Url("spinner.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/spinner.min.css") : Url("spinner.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/spinner.css");
                        public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.css") ? Url("tabs.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/tabs.min.css") : Url("tabs.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/tabs.css");
                        public static readonly string theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/theme.min.css") ? Url("theme.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/theme.min.css") : Url("theme.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/theme.css");
                        public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.css") ? Url("tooltip.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/tooltip.min.css") : Url("tooltip.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/tooltip.css");
                        }
        
            public static readonly string Readme_txt = Url("Readme.txt")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/Readme.txt");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Start1_10_0 {
                private const string URLPATH = "~/Content/themes/Start1.10.0";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    private const string URLPATH = "~/Content/themes/Start1.10.0/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                }
            
                public static readonly string jquery_ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui.min.css") ? Url("jquery-ui.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/jquery-ui.min.css") : Url("jquery-ui.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/jquery-ui.css");
                        public static readonly string jquery_ui_partial_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui.partial.min.css") ? Url("jquery-ui.partial.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/jquery-ui.partial.min.css") : Url("jquery-ui.partial.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/jquery-ui.partial.css");
                        public static readonly string jquery_ui_theme_partial_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.theme.partial.min.css") ? Url("jquery.ui.theme.partial.min.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/jquery.ui.theme.partial.min.css") : Url("jquery.ui.theme.partial.css")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/jquery.ui.theme.partial.css");
                        }
        
        }
    
    }


    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class MainArea {
        private const string URLPATH = "~/MainArea";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Diagnostic {
            private const string URLPATH = "~/MainArea/Diagnostic";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        }
    
    }

    public static partial class MainArea {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Home {
            private const string URLPATH = "~/MainArea/Home";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string Index_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Index.min.js") ? Url("Index.min.js")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/Index.min.js") : Url("Index.js")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/Index.js");
                    public static readonly string Tutorial_pptx = Url("Tutorial.pptx")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/Tutorial.pptx");
            public static readonly string wifi_jpg = Url("wifi.jpg")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/wifi.jpg");
        }
    
    }

    public static partial class MainArea {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Logon {
            private const string URLPATH = "~/MainArea/Logon";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        }
    
    }

    public static partial class MainArea {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class SharedViews {
            private const string URLPATH = "~/MainArea/SharedViews";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Sounds {
                private const string URLPATH = "~/MainArea/SharedViews/Sounds";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Error_wav = Url("Error.wav")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/Error.wav");
                public static readonly string success_wav = Url("success.wav")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/success.wav");
                public static readonly string warning_wav = Url("warning.wav")+"?"+T4MVCHelpers.TimestampString(URLPATH + "/warning.wav");
            }
        
        }
    
    }
    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static class Assets
            {
                public const string bootstrap_js = "~/Scripts/bootstrap.js"; 
                public const string jquery_3_3_1_js = "~/Scripts/jquery-3.3.1.js"; 
                public const string jquery_3_3_1_slim_js = "~/Scripts/jquery-3.3.1.slim.js"; 
                public const string jquery_ui_1_11_4_js = "~/Scripts/jquery-ui-1.11.4.js"; 
            }
        }
        public static partial class Content 
        {
            public static partial class Sounds 
            {
                public static class Assets
                {
                }
            }
            public static partial class themes 
            {
                public static partial class @base 
                {
                    public static partial class images 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                        public const string accordion_css = "~/Content/themes/base/accordion.css";
                        public const string all_css = "~/Content/themes/base/all.css";
                        public const string autocomplete_css = "~/Content/themes/base/autocomplete.css";
                        public const string base_css = "~/Content/themes/base/base.css";
                        public const string button_css = "~/Content/themes/base/button.css";
                        public const string core_css = "~/Content/themes/base/core.css";
                        public const string datepicker_css = "~/Content/themes/base/datepicker.css";
                        public const string dialog_css = "~/Content/themes/base/dialog.css";
                        public const string draggable_css = "~/Content/themes/base/draggable.css";
                        public const string menu_css = "~/Content/themes/base/menu.css";
                        public const string progressbar_css = "~/Content/themes/base/progressbar.css";
                        public const string resizable_css = "~/Content/themes/base/resizable.css";
                        public const string selectable_css = "~/Content/themes/base/selectable.css";
                        public const string selectmenu_css = "~/Content/themes/base/selectmenu.css";
                        public const string slider_css = "~/Content/themes/base/slider.css";
                        public const string sortable_css = "~/Content/themes/base/sortable.css";
                        public const string spinner_css = "~/Content/themes/base/spinner.css";
                        public const string tabs_css = "~/Content/themes/base/tabs.css";
                        public const string theme_css = "~/Content/themes/base/theme.css";
                        public const string tooltip_css = "~/Content/themes/base/tooltip.css";
                    }
                }
                public static partial class Start1_10_0 
                {
                    public static partial class images 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                        public const string jquery_ui_partial_css = "~/Content/themes/Start1.10.0/jquery-ui.partial.css";
                        public const string jquery_ui_theme_partial_css = "~/Content/themes/Start1.10.0/jquery.ui.theme.partial.css";
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
                public const string bootstrap_theme_css = "~/Content/bootstrap-theme.css";
                public const string bootstrap_css = "~/Content/bootstrap.css";
            }
        }
        public static partial class MainArea 
        {
            public static partial class Diagnostic 
            {
                public static class Assets
                {
                }
            }
        }
        public static partial class MainArea 
        {
            public static partial class Home 
            {
                public static class Assets
                {
                    public const string Index_js = "~/MainArea/Home/Index.js"; 
                }
            }
        }
        public static partial class MainArea 
        {
            public static partial class Logon 
            {
                public static class Assets
                {
                }
            }
        }
        public static partial class MainArea 
        {
            public static partial class SharedViews 
            {
                public static partial class Sounds 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114



@model DcmsMobile.DcmsRights.ViewModels.ManageUserViewModel
@{
    ViewBag.Title = "Manage User " + Model.User.UserName;
}
@section sidebar {
    <div class="box boxB">
        <div class="boxContent">
            @using (Html.BeginForm(MVC_DcmsRights.DcmsRights.Home.ManageUser(), FormMethod.Get))
            {
                @Html.LabelFor(m => m.User.UserName)             
                <input name="userName" class="ui-autocomplete-input" style="text-transform: uppercase;"
                       type="text" size="14" data-ac-list-url="@Url.Action(MVC_DcmsRights.DcmsRights.AutoComplete.UserAutocomplete())"
                       autocomplete="off" />
                <span title="Double click to quickly see suggestions">↓</span>
                <input type="submit" value="Go" id="btnGo" />
            }
        </div>
    </div>
    @if (!Model.IsEditable.Value)
    {
        <div class="boxContent">
            <blockquote>
                <a href="@(Url.Content("~/Logon?returnUrl=") + Url.Action(MVC_DcmsRights.DcmsRights.Home.ManageUser(Model.User.UserName)))">Login</a> as Security Administrator to grant and revoke roles, delete users,
                and reset passwords. If you are a supervisor, you can request the Help Desk to grant
                the role <em>@Model.EditableRoleName</em> to you.
            </blockquote>
        </div>
    }
}
<script type="text/javascript" src="@Links_DcmsRights.Areas.DcmsRights.Scripts.DcmsRights_all_js"></script>
<link href="@Links_DcmsRights.Areas.DcmsRights.Content.DcmsRights_all_css" rel="stylesheet" type="text/css" />
<script type="text/javascript">
    $(document).ready(function () {
        $('#divRolesTab').tabs();
        $('input:button').button();
        $('button:submit').button();
        $('#btnGo:submit').button();
        $('#btnRevokeRoles').click(function (e) {
            var result = confirm("Are you sure, you want to Revoke these roles from user");
            if (result) {
                $('#frmRevokeRole').submit();
            }
            else {
                return false;
            }
        });
        $('#btnAssignRoles').click(function (e) {
            var result = confirm("Are you sure, you want to Grant these roles to user");
            if (result) {
                $('#frmGrantRole').submit();
            }
            else {
                return false;
            }
        });
        $('#btnDelete').click(function (e) {
            var result = confirm("Are you sure, you want to delete user");
            if (result) {
                $('#frmDelete').submit();
            }
            else {
                return false;
            }
        });
    });
</script>
@using (Html.BeginForm("Action", MVC_DcmsRights.DcmsRights.Home.Name, FormMethod.Post, new
                            {
                                id = "frmDelete"
                            }))
{
    @Html.HiddenFor(m => m.User.UserName)
    <table>
        <tbody>
            <tr>
                <td>
                    @Html.LabelFor(m => m.User.CreateDate)
                </td>
                <td>
                    @Html.DisplayFor(m => m.User.CreateDate)
                </td>
                @if (Model.IsEditable.Value)
                {
                    <td>
                        <button type="submit" id="btnDelete" name="@MVC_DcmsRights.DcmsRights.Home.ActionNames.DeleteUser">
                            Delete User
                        </button>
                    </td>
                }
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(m => m.User.LastLockoutDate)
                </td>
                <td @Html.Raw(Model.User.IsLocked ? "class=\"ui-state-error\"" : "")>
                    @Html.DisplayFor(m => m.User.LastLockoutDate)
                </td>
                @if (Model.IsEditable.Value)
                {
                    <td>
                        @if (Model.User.IsLocked)
                        {
                            <button type="submit" name="@MVC_DcmsRights.DcmsRights.Home.ActionNames.UnlockUser">
                                Unlock
                            </button>
                        }
                        else
                        {
                            <button type="submit" name="@MVC_DcmsRights.DcmsRights.Home.ActionNames.LockedUser">
                                Locked
                            </button>
                        }
                    </td>
                }
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(m => m.User.PasswordExpiryDate)
                </td>
                <td @Html.Raw(Model.User.PasswordExpired ? "class=\"ui-state-error\"" : "")>
                    @Html.DisplayFor(m => m.User.PasswordExpiryDate)
                </td>
                @if (Model.IsEditable.Value)
                {
                    <td>
                        <button type="submit" name="@MVC_DcmsRights.DcmsRights.Home.ActionNames.ResetPassword">
                            Reset Password
                        </button>
                    </td>
                }
            </tr>
        </tbody>
    </table>
}
@if (Model.User.UserSessionLog.Count() > 0)
{
    <script type="text/javascript">
        $(document).ready(function () {
            $('#sessions').click(function (e) {
                if ($(e.target).is('button') && confirm("Are you sure, you want to kill this session forcefully.")) {
                    $(e.target).closest('form').submit();
                }
                else {
                    return false;
                }
            }).find('button').button();
        });
    </script>
    <table>
        <caption>
            Current Sessions
        </caption>
        <thead>
            <tr>
                <th>
                    Logon Time
                </th>
                <th>
                    Machine Name
                </th>
                <th>
                    OS User
                </th>
                <th>
                    Executable
                </th>
                <th>
                    Module
                </th>
                <th>
                    Action
                </th>
                <th>
                    Client Info
                </th>
                <th>
                    State
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody id="sessions">
            @foreach (var item in Model.User.UserSessionLog)
            {
                <tr>
                    <td>
                        @item.LogonTime @(item.IsActive ? "(Active)" : "")
                    </td>
                    <td>
                        @item.MachineName
                    </td>
                    <td>
                        @item.OSUserName
                    </td>
                    <td>
                        @item.OsExecutableName
                    </td>
                    <td>
                        @item.Module
                    </td>
                    <td>
                        @item.ActionName
                    </td>
                    <td>
                        @item.ClientInfo
                    </td>
                    <td>
                        @item.State
                    </td>
                    <td>
                        @if (Model.IsEditable.Value)
                        {
                            using (Html.BeginForm(MVC_DcmsRights.DcmsRights.Home.KillSession(), FormMethod.Post))
                            {
                                <input type="hidden" name="@ReflectionHelpers.NameFor((DcmsMobile.DcmsRights.ViewModels.UserSession m) => m.SessionId)" value="@item.SessionId" />
                                <input type="hidden" name="@ReflectionHelpers.NameFor((DcmsMobile.DcmsRights.ViewModels.UserSession m) => m.SerialNumber)" value="@item.SerialNumber" />
                                <input type="hidden" name="@ReflectionHelpers.NameFor((DcmsMobile.DcmsRights.ViewModels.UserSession m) => m.UserName)" value="@Model.User.UserName" />
                                <button type="button">Kill</button>
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div>
        <em>@Model.User.UserName</em> is not currently logged in.
    </div>
}
<div id="divRolesTab">
    <ul>
        <li><a href="#tabRevokeRoles">Assigned Roles</a></li>
        <li><a href="#tabGrantRoles">Not Assigned Roles</a></li>
        <li><a href="#tabAudit">Audit</a></li>
    </ul>
    <div id="tabRevokeRoles">
        @if (Model.AssignedRoles.Count() > 0)
        {

            using (Html.BeginForm(MVC_DcmsRights.DcmsRights.Home.RevokeRolesFromUser(), FormMethod.Post, new
            {
                id = "frmRevokeRole"
            }))
            {
                @Html.HiddenFor(m => m.User.UserName)

                <table>
                    @if (Model.IsEditable.Value)
                    {
                        <caption>
                            Select roles below to
                            <input type="button" id="btnRevokeRoles" value="Revoke..." />
                        </caption>
                    }
                    <thead>
                        <tr>
                            <th>
                                Program
                            </th>
                            <th>
                                Granted Role
                            </th>
                            @if (Model.IsEditable.Value)
                            {
                                <th></th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.AssignedRoles)
                        {
                            <tr>
                                <td>
                                    <ul>
                                        @foreach (var area in item.Areas)
                                        {
                                            <li>
                                                <span style="font-weight: bold">@area.AreaName </span>: @area.Purpose
                                            </li>
                                        }
                                    </ul>
                                </td>
                                <td>
                                    @Html.ActionLink(item.RoleName, MVC_DcmsRights.DcmsRights.Home.UsersInRole(item.RoleName))
                                </td>
                                @if (Model.IsEditable.Value)
                                {
                                    <td>
                                        <input type="checkbox" name='@Html.NameFor(m => m.SelectedRoles)' value='@item.RoleName' />
                                    </td>
                                }
                            </tr>
                        }

                    </tbody>
                </table>

            }
        }
        else
        {
            <h3>No role is granted to user.</h3>
        }

    </div>
    <div id="tabGrantRoles">
        @using (Html.BeginForm(MVC_DcmsRights.DcmsRights.Home.GrantRolesToUser(), FormMethod.Post, new { id = "frmGrantRole" }))
        {
            @Html.HiddenFor(m => m.User.UserName)

            <table>
                @if (Model.IsEditable.Value)
                {
                    <caption>
                        Select roles below to
                        <input type="button" id="btnAssignRoles" value="Grant...." />
                    </caption>
                }
                <thead>
                    <tr>
                        <th>
                            Program
                        </th>
                        <th>
                            Grantable Role
                        </th>
                        @if (Model.IsEditable.Value)
                        {
                            <th></th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.GrantableRoles)
                    {
                        <tr>
                            <td>
                                <ul>
                                    @foreach (var area in item.Areas)
                                    {
                                        <li>
                                            <span style="font-weight: bold">@area.AreaName </span>: @area.Purpose
                                        </li>
                                    }
                                </ul>
                            </td>
                            <td>
                                @Html.ActionLink(item.RoleName, MVC_DcmsRights.DcmsRights.Home.UsersInRole(item.RoleName))
                            </td>
                            @if (Model.IsEditable.Value)
                            {
                                <td>
                                    <input type="checkbox" name='@Html.NameFor(m => m.SelectedRoles)' value='@item.RoleName' />
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>

        }
    </div>
    <div id="tabAudit">
        <table>
            <thead>
                <tr>
                    <th>
                        Action
                    </th>
                    <th>
                        Time
                    </th>
                    <th>
                        Oracle User
                    </th>
                    <th>
                        OS User
                    </th>
                    <th>
                        Role Name
                    </th>
                    <th>
                        Terminal
                    </th>
                    <th>
                        Result
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.User.UserAuditLog)
                {
                    <tr>
                        <td>
                            @item.ActionName
                        </td>
                        <td>
                            @item.ActionTime
                        </td>
                        <td>
                            @item.ByOracleUserName
                        </td>
                        <td>
                            @item.ByOsUserName
                        </td>
                        <td>
                            @item.RoleName
                        </td>
                        <td>
                            @item.TerminalName
                        </td>
                        <td>
                            <span @Html.Raw(item.IsSuccess ? "" : "class=\"ui-state-error\"")>@item.Result</span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@model  DcmsMobile.Inquiry.Areas.Inquiry.IntransitEntity.IntransitShipmentViewModel
@{
    Layout = MVC_Inquiry.Inquiry.SharedViews.Views._layoutInquiry;
    ViewBag.Title = string.Format("Intransit Shipment {0}", Model.ShipmentId);
}


@section applinks{
    <li>
        <a href=@Url.Action(MVC_Inquiry.Inquiry.IntransitEntity.IntransitShipmentExcel(Model.ShipmentId))>
            <span class="glyphicon glyphicon-export"></span>Excel
        </a>
    </li>
    <li class="divider"></li>
}

@section script {
    <style type="text/css">
        /* This is a copy of dl-horizontal style from bootstrap.css. Bootstrap applies this style after 767px. We want this after 400px because our DT text are small*/
        @@media (min-width: 400px) {
         .inq-dl-horizontal-compact dt {
            float: left;
            width: 130px;
            overflow: hidden;
            clear: left;
            text-align: left;
            text-overflow: ellipsis;
            white-space: nowrap;
          }
          .inq-dl-horizontal-compact dd {
            margin-left: 140px;
          }
        }

    </style>
}

<div class="container">
    <h2 style="margin-top:0px;">
        @string.Format("Intransit Shipment {0}", Model.ShipmentId)

    </h2>

    <div class="row">

        <div class="panel panel-success">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <span class="pull-right">
                        <span class="glyphicon glyphicon-link"></span>
                        <a href="@Url.Action(MVC_Inquiry.Inquiry.IntransitEntity.IntransitShipmentList())" title="Inbound Shipment Summary"
                           target="_blank">
                            Inbound Shipment Summary
                        </a>
                    </span>
                    ERP @Html.DisplayFor(m => m.ErpId)
                </h3>
            </div>
            <div class="panel-body">
                <div class="col-md-6 col-sm-6">
                    <dl class="inq-dl-horizontal-compact">
                        <dt>Intransit</dt>
                        <dd>
                            @Html.DisplayFor(m => m.IntransitId)
                            <small>
                                &bull;<abbr title="Custom RecExpansion Field">Type:</abbr>
                                @Html.DisplayFor(m => m.IntransitType)
                            </small>
                        </dd>
                        <dt> Sewing Plant</dt>
                        <dd>
                            @Html.DisplayFor(m => m.SewingPlantCode)
                            @Html.DisplayFor(m => m.SewingPlantName)
                        </dd>
                        <dt>Shipment</dt>
                        <dd>@Html.DisplayFor(m => m.ShipmentDate) <small>&bull; Status : @Html.DisplayFor(m => m.IsShipmentClosed)</small></dd>
                        <dt>ASN Received on</dt>
                        <dd>@Html.DisplayFor(m => m.CreatedOn)</dd>
                        <dt>VWh</dt>
                        <dd>
                            @Html.DisplayFor(m => m.DispalyVwh)
                        </dd>

                    </dl>

                </div>
                <div class="col-md-6 col-sm-6">
                    @if (Model.ShipmentSku.Sum(p => p.ReceivedCartonCount) > 0)
                    {
                        <div class="alert alert-info">
                            @string.Format("{0} of {1} cartons received between {2} and {3}",
                        Model.ShipmentSku.Sum(p => p.ReceivedCartonCount), Model.ShipmentSku.Sum(p => p.ExpectedCartonCount), Model.MinReceiveDate, Model.MaxReceiveDate)
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            @string.Format("{0} cartons. None received.", Model.ShipmentSku.Sum(p => p.ExpectedCartonCount))
                        </div>
                    }
                    <span class="glyphicon glyphicon glyphicon-new-window"></span><a href="@Url.Action(Model.UrlReceiveCarton)"> Receive Cartons</a>
                </div>
            </div>
        </div>
    </div>
    <div class="table-responsive">
        <table class="table table-striped table-condensed table-bordered">
            <caption><h4>Shipment SKU</h4></caption>
            <thead>
                <tr>
                    <th>#</th>
                    <th style="text-align:center">SKU</th>
                    <th style="text-align:center" colspan="4"># Cartons</th>
                    <th style="text-align:center" colspan="4"># Pieces</th>
                    <th style="text-align:center">Remarks</th>
                </tr>
                <tr>
                    <th></th>
                    <th></th>
                    <th style="text-align:center">Expected</th>
                    <th style="text-align:center">Received</th>
                    <th style="text-align:center">Underage</th>
                    <th style="text-align:center">Overage</th>
                    <th style="text-align:center">Expected</th>
                    <th style="text-align:center">Received</th>
                    <th style="text-align:center">Underage <span class="glyphicon glyphicon-sort-by-order-alt"></span></th>
                    <th style="text-align:center">Overage</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (Model.ShipmentSku.Count > 0)
                {
                    for (var i = 0; i < Model.ShipmentSku.Count; i++)
                    {
                        <tr>
                            <td style="text-align:right">@(i + 1)</td>
                            <td>
                                @Html.DisplayFor(m => m.ShipmentSku[i].DisplaySku)
                            </td>
                            <td style="text-align:right">
                                @Html.DisplayFor(m => m.ShipmentSku[i].ExpectedCartonCount)
                            </td>
                            <td style="text-align:right">
                                @Html.DisplayFor(m => m.ShipmentSku[i].ReceivedCartonCount)
                            </td>
                            <td style="text-align:right">
                                @Html.DisplayFor(m => m.ShipmentSku[i].UnderReceviedCartonCount)
                            </td>
                            <td style="text-align:right">
                                @Html.DisplayFor(m => m.ShipmentSku[i].OverReceviedCartonCount)
                            </td>
                            <td style="text-align:right">
                                @Html.DisplayFor(m => m.ShipmentSku[i].ExpectedPieces)
                            </td>
                            <td style="text-align:right">
                                @Html.DisplayFor(m => m.ShipmentSku[i].ReceivedPieces)
                            </td>
                            <td style="text-align:right">
                                @Html.DisplayFor(m => m.ShipmentSku[i].UnderReceviedPieces)
                            </td>
                            <td style="text-align:right">
                                @Html.DisplayFor(m => m.ShipmentSku[i].OverReceviedPieces)
                            </td>
                            <td>
                                <div>@Html.DisplayFor(m => m.ShipmentSku[i].UnderReceivedCartonMessge)</div>
                                <div>@Html.DisplayFor(m => m.ShipmentSku[i].OverReceivedCartonMessge)</div>
                            </td>
                        </tr>
                    }

                }
            </tbody>
            <tfoot>
                <tr class="success">
                    <td>Total</td>
                    <td></td>
                    <td style="text-align:right">
                        @Html.DisplayFor(m => m.TotalExpectedCartonCount)
                    </td>
                    <td style="text-align:right">
                        @Html.DisplayFor(m => m.TotalReceivedCartonCount)
                    </td>
                    <td style="text-align:right">
                        @Html.DisplayFor(m => m.TotalUnderReceviedCartonCount)
                    </td>
                    <td style="text-align:right">
                        @Html.DisplayFor(m => m.TotalOverReceviedCartonCount)
                    </td>
                    <td style="text-align:right">
                        @Html.DisplayFor(m => m.TotalExpectedPieces)
                    </td>
                    <td style="text-align:right">
                        @Html.DisplayFor(m => m.TotalReceivedPieces)
                    </td>
                    <td style="text-align:right">
                        @Html.DisplayFor(m => m.TotalUnderReceviedPieces)
                    </td>
                    <td style="text-align:right">
                        @Html.DisplayFor(m => m.TotalOverReceviedPieces)
                    </td>
                    <td></td>
                </tr>
            </tfoot>

        </table>
    </div>
</div>
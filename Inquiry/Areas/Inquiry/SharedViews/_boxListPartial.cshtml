@model DcmsMobile.Inquiry.Areas.Inquiry.SharedViews.IBoxListViewModel

<ul class="list-group">
    <li class="list-group-item list-group-item-success">
        <div class="row">
            <div class="col-md-4">
                <h4 class="list-group-item-heading">
                    Box
                </h4>
                <p class="list-group-item-text">
                    Customer
                </p>
            </div>
            <div class="col-md-4">
               
                    <p class="list-group-item-text">
                        Picked Date&bull;
                        <em>Picker</em>
                    </p>
@if (Model.ShowPickslipLinks)
{
                    <p class="list-group-item-text">
                        <span class="btn btn-success btn-xs">PickWave</span>
                        <span class="btn btn-info btn-xs"> Pickslip</span>
                    </p>
                }
            </div>


            <div class="col-md-4">
                <div class="progress" style="margin-bottom:0px;">
                    <div class="progress-bar" role="progressbar" aria-valuenow="80" aria-valuemin="0" aria-valuemax="100" style="width:80%;">
                        Picked pieces of Expected pieces
                    </div>
                </div>
            </div>
        </div>
    </li>
    @for (var i = 0; i < Model.AllBoxes.Count; ++i)
    {

        <li class="list-group-item">
            <div class="row">
                <div class="col-md-4">
                    <h4 class="list-group-item-heading">
                        <small>@(i + 1)</small>
                        <a href="@Url.Action(MVC_Inquiry.Inquiry.BoxEntity.Box(Model.AllBoxes[i].Ucc128Id))">
                         @Model.AllBoxes[i].Ucc128Id
                        </a>
                    </h4>
                    <p class="list-group-item-text">
                        <a href="@Url.Action(MVC_Inquiry.Inquiry.CustomerEntity.Customer(Model.AllBoxes[i].CustomerId))">@Html.DisplayFor(m => m.AllBoxes[i].CustomerId)</a>
                        @Html.DisplayFor(m => m.AllBoxes[i].CustomerName)
                    </p>
                </div>
                <div class="col-md-4">
                    <p class="list-group-item-text">
                        @Html.DisplayFor(m => m.AllBoxes[i].PitchDate) 
                        &bull;<em>@Html.DisplayFor(m => m.AllBoxes[i].MinPickerName)</em>
                    </p>


                    <p class="list-group-item-text">
                        @if (Model.ShowPickslipLinks)
                        {
                            <a href="@Url.Action(MVC_Inquiry.Inquiry.PickslipEntity.Wave(Model.AllBoxes[i].BucketId))" class="btn btn-success btn-xs">  @Html.DisplayFor(m => m.AllBoxes[i].BucketId)</a>
    <a href="@Url.Action(MVC_Inquiry.Inquiry.PickslipEntity.Pickslip(Model.AllBoxes[i].PickslipId))" class="btn btn-info btn-xs"> @Html.DisplayFor(m => m.AllBoxes[i].PickslipId)</a>
                        }

                    </p>
                </div>


                <div class="col-md-4">
                    <div class="progress" style="margin-bottom:0px;">
                        <div class="progress-bar" role="progressbar" aria-valuenow="@(Model.AllBoxes[i].CurrentPieces ?? 0)" aria-valuemin="0" aria-valuemax="100" style="width: @Model.AllBoxes[i].PctPiecesPicked%; min-width:50px">
                            @Html.DisplayFor(m => m.AllBoxes[i].DisplayPieces)
                        </div>
                    </div>

                    <span class="text-info">Last Label Printed: @Html.DisplayFor(m => m.AllBoxes[i].LastLabelPrintDate)</span>
                    <div>
                        @if (@Model.AllBoxes[i].StopProcessReason == "$BOXCANCEL")
                        {
                            <span>Cancelled @Html.DisplayFor(m => m.AllBoxes[i].StopProcessDate)</span>
                        }
                        else if (Model.AllBoxes[i].ValidationDate.HasValue)
                        {
                            <span class="bg-success">Validated @Html.DisplayFor(m => m.AllBoxes[i].ValidationDate)</span>
                        }
                        else if (Model.AllBoxes[i].PitchDate.HasValue)
                        {
                            <span class="bg-success">Pitched @Html.DisplayFor(m => m.AllBoxes[i].PitchDate)</span>
                        }
                        else if (Model.AllBoxes[i].TruckLoadDate.HasValue)
                        {
                            <span class="bg-success">Loaded @Html.DisplayFor(m => m.AllBoxes[i].TruckLoadDate)</span>
                        }
                    </div>


                </div>
            </div>
        </li>
         }

</ul>
















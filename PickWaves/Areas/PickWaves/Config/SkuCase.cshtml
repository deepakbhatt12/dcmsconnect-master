<!--This document is HTML5 Validated by "W3C Markup Validation Service" at http://validator.w3.org/ on 15 Dec 2014 by jnegi-->
@model DcmsMobile.PickWaves.Areas.PickWaves.Config.SkuCaseViewModel
@{
    ViewBag.Title = "Packing Cartons";
    Layout = @MVC_PickWaves.PickWaves.SharedViews.Views._layoutPickWaves;
}


@section applinks{
    <li>@Html.ActionLink("Style Sku Case", MVC_PickWaves.PickWaves.Config.StyleSkuCase())</li>
    <li>@Html.ActionLink(" Customer Sku Case", MVC_PickWaves.PickWaves.Config.CustSkuCase())</li>
    <li>@Html.ActionLink("Customer Constraints", MVC_PickWaves.PickWaves.Config.Constraint())</li>
    <li class="divider">
    </li>
}

<div class="container">
    <h2 style="margin-top:0">
        @ViewBag.Title
    </h2>

    <p>
        You can manage size of  cartons per SKU case or override them according to customer.
    </p>


    <div>

        <blockquote class="text-info">
            Available SKU Cases
            @if (Model.UserIsManager)
            {
                <button class="btn btn-default" data-toggle="modal" data-target="#tabModal" title="New SKU Case"
                        data-action-url="@Url.Action(MVC_PickWaves.PickWaves.Config.SkuCaseEditor())">
                    <span class="glyphicon glyphicon-file"></span> New SKU Case...
                </button>

            }
        </blockquote>
        <ul class="list-group">
            <li class="list-group-item list-group-item-success">
                <div class="row">
                    <div class="col-md-5 col-sm-5">
                        <h4 class="list-group-item-heading">
                            Case
                            <small>
                                Description
                            </small>
                        </h4>
                    </div>
                    <div class="col-md-2 col-sm-2">
                        <label>Empty Weight(lbs)</label>
                    </div>
                    <div class="col-md-3 col-sm-3">
                        <label>Volume(ft)</label>

                        <span class="label label-info">Inner <span class="glyphicon glyphicon-sort-by-order-alt"></span> </span>&nbsp; Outer
                    </div>
                    <div class="col-md-2 col-sm-2">
                        @if (Model.UserIsManager)
                        {
                            <button class="btn btn-xs btn-default  pull-right" disabled>
                                Action
                            </button>
                        }
                    </div>
                </div>
            </li>
            @for (var i = 0; i < Model.SkuCaseList.Count; i++)
            {
                <li class="list-group-item  list-group-item-@(Model.SkuCaseList[i].IsAvailable ? "" : "warning")" title="@(Model.SkuCaseList[i].IsAvailable ? string.Empty : "This sku case is currently not in use")">

                    <div class="row">
                        <div class="col-md-5 col-sm-5">
                            <h4 class="list-group-item-heading">
                                <small>@(i + 1)</small>
                                @if (!Model.SkuCaseList[i].IsAvailable)
                                {
                                    <span class="glyphicon glyphicon-info-sign"></span>
                                }
                                @Html.DisplayFor(m => m.SkuCaseList[i].CaseId)

                                <small>
                                    @Html.DisplayFor(m => m.SkuCaseList[i].Description)
                                </small>
                            </h4>
                        </div>
                        <div class="col-md-2 col-sm-2">
                            @Html.DisplayFor(m => m.SkuCaseList[i].EmptyWeight)
                        </div>
                        <div class="col-md-3 col-sm-3">
                            <span class="label label-info">
                                @Html.DisplayFor(m => m.SkuCaseList[i].MaxContentVolume)

                            </span>&nbsp; @Html.DisplayFor(m => m.SkuCaseList[i].OuterCubeVolume)
                        </div>
                        <div class="col-md-2 col-sm-2">
                            @if (Model.UserIsManager)
                            {
                                <button class="pull-right btn btn-default btn-xs" data-toggle="modal" data-target="#tabModal" title="Edit SKU Case"
                                        data-action-url="@Url.Action(MVC_PickWaves.PickWaves.Config.SkuCaseEditor(Model.SkuCaseList[i].CaseId))">
                                    <span class="glyphicon glyphicon-edit"></span> Edit
                                </button>
                            }
                        </div>
                    </div>
                </li>

            }
        </ul>
    </div>


</div>

<!--Modal called from actions of each tabs-->
<div class="modal fade" id="tabModal" tabindex="-1" role="dialog"  aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            AJAX loaded HTML here
        </div>
    </div>
</div>


@section script {
    <link href="@Links_PickWaves.Areas.PickWaves.SharedViews.typeahead_css" rel="stylesheet" />

    <script src="@Links_PickWaves.Areas.PickWaves.Config.AjaxModal_js" type="text/javascript"></script>

}








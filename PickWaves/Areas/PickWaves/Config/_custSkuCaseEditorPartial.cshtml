@model DcmsMobile.PickWaves.Areas.PickWaves.Config.CustSkuCaseEditorViewModel
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
    <h4 class="modal-title">
        @if (Model.CustomerId == null)
        {
            <span>Add SKU Case Preference for Customer</span>
        }
        else
        {
            <span>Add New Case for Customer @Html.DisplayFor(m => m.CustomerId)</span>
        }
    </h4>

</div>
<div class="modal-body">
    <form class="form-horizontal" id="frmAddCustSkuCasePreference" role="form" action="@Url.Action(MVC_PickWaves.PickWaves.Config.AddCustSkuCase())" method="post">
        @if (Model.CustomerId == null)
        {
            <div class="form-group">
                <label for="tbCustomerSearch" class="col-sm-3 control-label">
                    Customer<sup><span class="glyphicon glyphicon-asterisk"></span></sup>
                    @Html.TextBoxFor(m => m.CustomerId, new
   {
       id = "hfCustomer",
       style = "visibility:hidden"
   })
                </label>
                <div class="col-sm-9">
                    <div class="input-group">
                        <input placeholder="Search Customer" id="tbCustomerSearch"
                               class="form-control typeahead" data-typeahead-url="@Url.Action(MVC_PickWaves.PickWaves.Config.CustomerAutocomplete("~"))" data-typeahead-hf="#hfCustomer" />
                        <span class="input-group-btn">
                            <span class="btn btn-default"><span class="glyphicon glyphicon-search"></span></span>
                        </span>
                    </div>

                    @Html.ValidationMessageFor(m => m.CustomerId, null, new
           {
               @class = "help-block"
           })
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(m => m.CustomerId, new
   {
       id = "hfCustomer"
   })
        }
        <div class="form-group">
            <label for="ddlCases" class="col-sm-3 control-label">Case <sup><span class="glyphicon glyphicon-asterisk"></span></sup></label>
            <div class="col-sm-9">
                @Html.DropDownListFor(m => m.CaseId, Model.SkuCaseList, "Please Select", new
       {
           required = "required",
           @class = "form-control",
           id = "ddlCases"
       })
                @Html.ValidationMessageFor(m => m.CaseId, null, new
           {
               @class = "help-block"
           })
            </div>
        </div>
        <div class="form-group">
            <label for="case" class="col-sm-3 control-label">Comments</label>
            <div class="col-sm-9">
                @Html.TextAreaFor(m => m.Comment, new
            {
                maxlength = "256",
                rows = "3",
                cols = "49",
                @class = "form-control",
                @placeholder = "Max 50 characters"
            })
            </div>
        </div>
    </form>
</div>

<div class="modal-footer">
    <button type="button" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
</div>


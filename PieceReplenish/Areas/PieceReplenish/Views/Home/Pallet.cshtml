@model DcmsMobile.PieceReplenish.ViewModels.PalletViewModel
@{
    ViewBag.Title = "Piece Replenish - Scan Pallet";
    var i = 0;
    var aisleCount = 1;
    
}
@section sidebar {
    <div class="box boxA">
        <div class="boxContent">
            @Html.Partial(MVC_PieceReplenish.PieceReplenish.Home.Views.Pallet_mobile)
        </div>
    </div>
    <div class="box">
        <h3>
            Can’t see your SKU?</h3>
        <div class="boxContent">
            <span class="ui-icon ui-icon-search" style="display: inline-block"></span><a href="@Url.Action(MVC_PieceReplenish.PieceReplenish.Diagnostic.SearchSku(Model.Context.Serialized))">
                Search SKU here</a>
        </div>
    </div>
    <div class="box">
        <h3>
            Legend</h3>
        <div class="boxContent">
            @if (Model.IsEditable)
            {
                <p>
                    <span style="color: red; font-weight: bold; font-size: medium;">&#33;</span> <em>High
                        priority SKU</em>. Click to change to normal priority.
                </p>
                <p>
                    <span>&uarr;</span> <em>Normal priority SKU</em>. Click to change the priority to
                    High.
                </p>
                <p>
                    <span class="ui-icon ui-icon-person" style="display: inline-block"></span>Pullers
                    are currently pulling for this restock aisle.
                </p>
                <p>
                    <span class="ui-state-highlight">*</span>SKU currently assigned to a puller for
                    pulling.
                </p>
                <p>
                    <span>*</span> Displayed against an SKU if it will be assigned to the next puller.
                </p> 
                <p>
                    <span class="ui-state-error">Pieces</span> will be shown in this color, when system
                    allows overpulling to complete the remaining pieces of orders.
                </p>               
            }
            else
            {
                <blockquote>
                    <a href="@Url.Content("~/Logon?returnUrl=" + Url.Encode(Url.Action(MVC_PieceReplenish.PieceReplenish.Home.Pallet(Model.Context.Serialized))))">
                        Login</a> to manage Piece Replenishment, you can accelerate the replenishment
                    of critical SKUs by adjusting their priority, If you are a supervisor, you can request
                    the Help Desk to grant the role <em>@Model.EditableRoleName</em> to you.
                </blockquote>
            }
            <blockquote>
                Can’t see your SKU? Check <a href="@(string.Format("{0}?building_id={1}&inventory_area={2}&replenishment_area={3}", DcmsMobile.PieceReplenish.ViewModels.PalletViewModel.InventoryShortageReportUrl, Model.Context.BuildingId, Model.Context.ShortName, Model.Context.CartonAreaId))" target="report">
                    <em>130.28</em> </a>to see if there is shortage of inventory.
            </blockquote>
        </div>
    </div>
}
<div class="box">
    <h2>@Model.Context.BuildingId &raquo; Open Pulls in @Model.Context.CartonAreaId for
        Pick Area @Model.Context.ShortName</h2>
    <div class="boxContent">
        <p>
            The list below shows the SKUs in @Model.Context.ShortName which can be replenished,
            organized by restock aisle. Click on the <span>&uarr;</span> image to bump up the
            priority of an SKU. High priority SKUs will be assigned to the next puller ahead
            of other SKUs. SKUs currently being pulled are indicated by <span class="ui-state-highlight">
                *</span>. The Aisle containing High priority SKUs will be shown top in the list.
        </p>
        <blockquote>
            Replenishment requirements of @Model.Context.ShortName are updated periodically.
            The status as of @Html.DisplayFor(m => m.QueryTime) is displayed below.
            @if (Model.IsRefreshingNow)
            {
                <text> Update is currently in progress.
                @Html.ActionLink("Refresh", MVC_PieceReplenish.PieceReplenish.Home.Actions.Pallet(Model.Context.Serialized, false))
                the page after 30 seconds to check the latest status.
                </text>
            }
            else
            {
                <text> The next update will automatically happen at @Html.DisplayFor(m => m.NextRunDate)
                or you can
                @Html.ActionLink("initiate the update now", MVC_PieceReplenish.PieceReplenish.Home.Actions.Pallet(Model.Context.Serialized, true)).
                </text>
            }
        </blockquote>
        <div id="divPriorityAlert" class="ui-state-highlight ui-helper-hidden">
            Refresh the page to see updated priorities
        </div>
        @if (Model.AisleReplenishmentStats.Any())
        {
            <div class="ui-state-highlight" style="font-size: 1.25em">
                Total <strong>@Html.DisplayFor(m => m.TotalPiecesToPull)</strong> pieces in <strong>@Html.DisplayFor(m => m.TotalCartonsToPull)</strong>
                cartons waiting for pulling from <strong>@Model.Context.CartonAreaId</strong></div>
            
            <table border="1" id="tbl" style="width: 100%">
                <thead>
                    <tr>
                        <th>
                            Restock Aisle
                        </th>
                        <th>
                            SKUs which can be Replenished
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var aisle in Model.AisleReplenishmentStats)
                    {
                        <tr>
                            <td style="vertical-align: top">
                                <strong style="font-size: 1.2em">@(aisleCount++). <em>@aisle.RestockAisleId</em></strong>
                                @if (!string.IsNullOrWhiteSpace(aisle.Pullers))
                                {
                                    <span class="ui-icon ui-icon-person" style="display: inline-block"></span>
                                    <br />
                                    <em>Pullers</em> @aisle.Pullers
                                }
                                <hr />
                                <div class="ui-slider ui-slider-vertical ui-widget ui-widget-content ui-corner-all"
                                    style="position: relative; float: left; height: 8em">
                                    <div style="height: @(aisle.PercentInAisle)%; position:absolute; width:90%" class="ui-widget-header ui-corner-top">
                                    </div>
                                    <div style="top:@(aisle.PercentInAisle)%; height: @(aisle.PercentInRestock)%; position:absolute; width:90%" class="ui-state-active">
                                    </div>
                                    <div style="top:@(aisle.PercentInAisle + aisle.PercentInRestock)%; height: @(aisle.PercentToPull)%; position:absolute; width:90%" class="ui-state-highlight">
                                    </div>
                                </div>
                                <ul style="margin-left: 1mm">
                                    <li><em class="ui-widget-header">Pieces in @Model.Context.ShortName:</em>&nbsp;@string.Format("{0:N0}", aisle.PiecesInAisle)</li>
                                    <li><em class="ui-state-active">Pieces in @Model.Context.RestockAreaId:</em>&nbsp;@string.Format("{0:N0} pieces ({1:N0} cartons)", aisle.PiecesInRestock, aisle.CartonsInRestock)</li>
                                    <li><em class="ui-state-highlight">To pull from @Model.Context.CartonAreaId:</em>&nbsp;@string.Format("{0:N0} pieces ({1:N0} cartons)", aisle.TotalPiecesToPull, aisle.CartonsToPull)</li>
                                    <li><em>Capacity:</em>&nbsp;@string.Format("{0:N0}", aisle.Capacity)</li>
                                </ul>
                                <div class="ui-helper-clearfix">
                                </div>
                            </td>
                            <td>
                                @foreach (var vwh in aisle.SkuList.GroupBy(p => p.VwhId))
                                {
                                    <table style="width: 100%">
                                        <caption>
                                            Vwh: @vwh.Key</caption>
                                        <thead>
                                            <tr>
                                                <th rowspan="2">
                                                    #
                                                </th>
                                                <th rowspan="2" title="Best Pick Wave Priority - Number of Pick Waves in which the SKU is needed. See legend for explanation of icons.">
                                                    Priority <span class="ui-icon ui-icon-triangle-1-s" style="display: inline-block">
                                                    </span>
                                                </th>
                                                <th colspan="2" rowspan="2">
                                                    SKU
                                                </th>
                                                <th colspan="4">
                                                    Pieces
                                                </th>
                                                <th colspan="2">
                                                    Cartons
                                                </th>
                                                <td rowspan="2" title="Pieces in Pick Area, Restock Area and Pieces to be pulled are proportionately represented using distinct colors."
                                                    style="text-align: center">
                                                    Piece Progress
                                                    <div class="ui-progressbar ui-widget ui-widget-content ui-corner-all" style="position: relative;
                                                        height: 1em">
                                                        <div style="width: 20%" class="ui-progressbar-value ui-widget-header ui-corner-left">@Model.Context.ShortName</div>
                                                        <div style="left: 20%; width: 20%" class="ui-progressbar-value  ui-state-active">@Model.Context.RestockAreaId</div>
                                                        <div style="left: 40%; width: 20%" class="ui-progressbar-value  ui-state-highlight">@Model.Context.CartonAreaId</div>
                                                        <div style="left: 60%; width: 40%; text-align: center" class="ui-progressbar-value">
                                                            Empty</div>
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    Capacity
                                                </td>
                                                <td class="ui-widget-header">@Model.Context.ShortName
                                                </td>
                                                <td class="ui-state-active">@Model.Context.RestockAreaId
                                                </td>
                                                <td class="ui-state-highlight">@Model.Context.CartonAreaId
                                                </td>
                                                <td>@Model.Context.RestockAreaId
                                                </td>
                                                <td>@Model.Context.CartonAreaId
                                                </td>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var sku in vwh)
                                            {
                                                <tr  class="row@(i % 2 == 0 ? "A" : "B")">
                                                    <td>@(i + 1)
                                                    </td>
                                                    <td>
                                                        @if (Model.IsEditable)
                                                        {
                                                            if (sku.SkuReplenishmentPriority.HasValue)
                                                            {
                                                            <a style="color: red; font-weight: bold; " title="Priority has been set to high. Click to make it normal." class="set-priority"
                                                                   href="@Url.Action(MVC_PieceReplenish.PieceReplenish.Home.SetPriority(Model.Context.BuildingId, Model.Context.ShortName, sku.SkuId, false))">
                                                                &#33;</a>
                                                            }
                                                            else
                                                            {
                                                            <a title="Priority is normal. Click to make it high." class="set-priority"
                                                                   href="@Url.Action(MVC_PieceReplenish.PieceReplenish.Home.SetPriority(Model.Context.BuildingId, Model.Context.ShortName, sku.SkuId, true))">
                                                                &uarr;</a>
                                                            }
                                                        }
                                                        else if (sku.SkuReplenishmentPriority.HasValue)
                                                        {
                                                            <span style="color: red; font-weight: bold;" title="Priority has been set to high.">
                                                                &#33;</span>
                                                        }
                                                        @if (sku.BeingPulled)
                                                        {
                                                            <span class="ui-state-highlight" title="This SKU is currently assigned to a puller for pulling">
                                                                *</span>
                                                        }
                                                        @if (sku.WillGetPulledNext)
                                                        {
                                                            <span title="This SKU is next in line for pulling">*</span>
                                                        }
                                                        @if (sku.WavePriority.HasValue)
                                                        {
                                                            <span>@sku.WavePriority - @sku.WaveCount</span>
                                                        }
                                                    </td>
                                                    <td title="UPC: @sku.UpcCode">
                                                        @sku.Style
                                                    </td>
                                                    <td style="white-space: nowrap">
                                                        <span style="float: left" title="UPC: @sku.UpcCode">@sku.Color, @sku.Dimension, @sku.SkuSize</span>
                                                        <a title="Click to diagnose this SKU" style="float: right" href="@Url.Action(MVC_PieceReplenish.PieceReplenish.Diagnostic.SearchSkuLink(Model.Context.Serialized, sku.SkuId,sku.UpcCode))" class="ui-icon ui-icon-search"></a>
                                                    </td>
                                                    <td style="text-align: right">@string.Format("{0:N0}", sku.AisleCapacity)
                                                    </td>
                                                    <td class="ui-widget-header" style="text-align: right; font-weight: normal">
                                                        @string.Format("{0:N0}", sku.PiecesInAisle)
                                                    </td>
                                                    <td class="ui-state-active" style="text-align: right">@string.Format("{0:N0}", sku.PiecesInRestock)
                                                    </td>
                                                    <td class="ui-state-highlight" style="text-align: right">@string.Format("{0:N0}", sku.PiecesInPullableCarton)
                                                    </td>
                                                    <td style="text-align: right">@string.Format("{0:N0}", sku.CartonsInRestock)
                                                    </td>
                                                    <td style="text-align: right">@string.Format("{0:N0}", sku.CartonsToPull)
                                                    </td>
                                                    <td style="width: 10em">
                                                        <div class="ui-progressbar ui-widget ui-widget-content ui-corner-all" style="position: relative;
                                                            height: 1em">
                                                            @if (sku.PercentInAisle > 0)
                                                            {
                                                                <div style="width: @(sku.PercentInAisle)%" class="ui-progressbar-value ui-widget-header ui-corner-left" title="@sku.PiecesInAisle Pieces at pick locations">@sku.PiecesInAisle</div>
                                                            }
                                                            @if (sku.PercentInRestock > 0)
                                                            {
                                                                <div style="left:@(sku.PercentInAisle)%; width: @(sku.PercentInRestock)%" class="ui-progressbar-value ui-state-active" title="@sku.PiecesInRestock Pieces in restock">@sku.PiecesInRestock</div>
                                                            }
                                                            @if (sku.PercentToPull > 0)
                                                            {
                                                                <div style="left:@(sku.PercentInAisle + sku.PercentInRestock)%; width: @(sku.PercentToPull)%" class="ui-progressbar-value ui-state-highlight ui-corner-right" 
                                                                     title="@sku.PiecesInPullableCarton Pieces to be pulled. @Html.Raw(sku.IsOverpulling ? "Bar exceeded beyond the column, because we are overpulling here to complete the remaining " + sku.PiecesToPick + " pieces of order." : "")">
                                                                    <span @Html.Raw(sku.IsOverpulling ? "class='ui-state-error'" : "")>@sku.PiecesInPullableCarton</span>
                                                                </div>
                                                            }
                                                        </div>
                                                    </td>
                                                </tr>
                                                            ++i;
                                            }
                                        </tbody>
                                    </table>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="ui-state-highlight">
                Pulling suggestion is not available for this area
            </div>
        }
    </div>
    <div id="spanMessage" class="ui-helper-hidden ui-state-highlight" style="font-style: italic;
        width: 20em">
    </div>
</div>
@section scripts{
    <script src="@Links_PieceReplenish.Areas.PieceReplenish.Scripts.Pallet_desktop_js" type="text/javascript"></script>
    <style type="text/css">
        .ui-progressbar-value
        {
            position: absolute;
            font-size: 0.7em;
            font-weight: normal;
            overflow: hidden;
            text-align: center;
        }
    </style>
}
@*
    $Id: Pallet.cshtml 17725 2012-07-26 08:18:57Z bkumar $ 
    $Revision: 17725 $
    $URL: svn://vcs/net4/Projects/Mvc/DcmsMobile.Pull/trunk/Pull/Areas/PieceReplenish/Views/Home/Pallet.cshtml $
    $Header: svn://vcs/net4/Projects/Mvc/DcmsMobile.Pull/trunk/Pull/Areas/PieceReplenish/Views/Home/Pallet.cshtml 17725 2012-07-26 08:18:57Z bkumar $
    $Author: bkumar $
    $Date: 2012-07-26 13:48:57 +0530 (Thu, 26 Jul 2012) $
*@ 
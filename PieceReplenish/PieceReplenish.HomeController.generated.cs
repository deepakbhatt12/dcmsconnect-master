// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace DcmsMobile.PieceReplenish.Areas.PieceReplenish.Controllers
{
    public partial class HomeController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected HomeController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Pallet()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Pallet);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AcceptPallet()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AcceptPallet);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Carton()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Carton);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PullCarton()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PullCarton);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SkipCarton()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SkipCarton);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult MoveCartonToSuspense()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MoveCartonToSuspense);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetPriority()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetPriority);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DiscardPalletSuggestion()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DiscardPalletSuggestion);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public HomeController Actions { get { return MVC_PieceReplenish.PieceReplenish.Home; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "PieceReplenish";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Home";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Home";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string ToggleEmulation = "ToggleEmulation";
            public readonly string Building = "Building";
            public readonly string BuildingMobile = "BuildingMobile";
            public readonly string Pallet = "Pallet";
            public readonly string AcceptPallet = "AcceptPallet";
            public readonly string Carton = "Carton";
            public readonly string PullCarton = "PullCarton";
            public readonly string SkipCarton = "SkipCarton";
            public readonly string MoveCartonToSuspense = "MoveCartonToSuspense";
            public readonly string SetPriority = "SetPriority";
            public readonly string DiscardPalletSuggestion = "DiscardPalletSuggestion";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string ToggleEmulation = "ToggleEmulation";
            public const string Building = "Building";
            public const string BuildingMobile = "BuildingMobile";
            public const string Pallet = "Pallet";
            public const string AcceptPallet = "AcceptPallet";
            public const string Carton = "Carton";
            public const string PullCarton = "PullCarton";
            public const string SkipCarton = "SkipCarton";
            public const string MoveCartonToSuspense = "MoveCartonToSuspense";
            public const string SetPriority = "SetPriority";
            public const string DiscardPalletSuggestion = "DiscardPalletSuggestion";
        }


        static readonly ActionParamsClass_Building s_params_Building = new ActionParamsClass_Building();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Building BuildingParams { get { return s_params_Building; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Building
        {
            public readonly string forceQuery = "forceQuery";
        }
        static readonly ActionParamsClass_Pallet s_params_Pallet = new ActionParamsClass_Pallet();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Pallet PalletParams { get { return s_params_Pallet; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Pallet
        {
            public readonly string context = "context";
            public readonly string forceQuery = "forceQuery";
        }
        static readonly ActionParamsClass_AcceptPallet s_params_AcceptPallet = new ActionParamsClass_AcceptPallet();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AcceptPallet AcceptPalletParams { get { return s_params_AcceptPallet; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AcceptPallet
        {
            public readonly string pvm = "pvm";
        }
        static readonly ActionParamsClass_Carton s_params_Carton = new ActionParamsClass_Carton();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Carton CartonParams { get { return s_params_Carton; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Carton
        {
            public readonly string serializedContext = "serializedContext";
            public readonly string palletId = "palletId";
            public readonly string sound = "sound";
        }
        static readonly ActionParamsClass_PullCarton s_params_PullCarton = new ActionParamsClass_PullCarton();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PullCarton PullCartonParams { get { return s_params_PullCarton; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PullCarton
        {
            public readonly string cvm = "cvm";
        }
        static readonly ActionParamsClass_SkipCarton s_params_SkipCarton = new ActionParamsClass_SkipCarton();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SkipCarton SkipCartonParams { get { return s_params_SkipCarton; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SkipCarton
        {
            public readonly string serializedContext = "serializedContext";
            public readonly string palletId = "palletId";
            public readonly string sourceLocationId = "sourceLocationId";
            public readonly string cartonId = "cartonId";
        }
        static readonly ActionParamsClass_MoveCartonToSuspense s_params_MoveCartonToSuspense = new ActionParamsClass_MoveCartonToSuspense();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_MoveCartonToSuspense MoveCartonToSuspenseParams { get { return s_params_MoveCartonToSuspense; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_MoveCartonToSuspense
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_SetPriority s_params_SetPriority = new ActionParamsClass_SetPriority();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetPriority SetPriorityParams { get { return s_params_SetPriority; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetPriority
        {
            public readonly string buildingId = "buildingId";
            public readonly string pickAreaId = "pickAreaId";
            public readonly string skuId = "skuId";
            public readonly string setHighPriorityFlag = "setHighPriorityFlag";
        }
        static readonly ActionParamsClass_DiscardPalletSuggestion s_params_DiscardPalletSuggestion = new ActionParamsClass_DiscardPalletSuggestion();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DiscardPalletSuggestion DiscardPalletSuggestionParams { get { return s_params_DiscardPalletSuggestion; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DiscardPalletSuggestion
        {
            public readonly string pullerName = "pullerName";
            public readonly string palletId = "palletId";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Building = "Building";
                public readonly string Building_mobile = "Building.mobile";
                public readonly string Carton = "Carton";
                public readonly string Carton_mobile = "Carton.mobile";
                public readonly string Index = "Index";
                public readonly string Index_mobile = "Index.mobile";
                public readonly string Pallet = "Pallet";
                public readonly string Pallet_mobile = "Pallet.mobile";
                public readonly string SkipCarton = "SkipCarton";
                public readonly string SkipCarton_mobile = "SkipCarton.mobile";
            }
            public readonly string Building = "~/Areas/PieceReplenish/Views/Home/Building.cshtml";
            public readonly string Building_mobile = "~/Areas/PieceReplenish/Views/Home/Building.mobile.cshtml";
            public readonly string Carton = "~/Areas/PieceReplenish/Views/Home/Carton.cshtml";
            public readonly string Carton_mobile = "~/Areas/PieceReplenish/Views/Home/Carton.mobile.cshtml";
            public readonly string Index = "~/Areas/PieceReplenish/Views/Home/Index.cshtml";
            public readonly string Index_mobile = "~/Areas/PieceReplenish/Views/Home/Index.mobile.cshtml";
            public readonly string Pallet = "~/Areas/PieceReplenish/Views/Home/Pallet.cshtml";
            public readonly string Pallet_mobile = "~/Areas/PieceReplenish/Views/Home/Pallet.mobile.cshtml";
            public readonly string SkipCarton = "~/Areas/PieceReplenish/Views/Home/SkipCarton.cshtml";
            public readonly string SkipCarton_mobile = "~/Areas/PieceReplenish/Views/Home/SkipCarton.mobile.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_HomeController : DcmsMobile.PieceReplenish.Areas.PieceReplenish.Controllers.HomeController
    {
        public T4MVC_HomeController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ToggleEmulationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ToggleEmulation()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ToggleEmulation);
            ToggleEmulationOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void BuildingOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, bool forceQuery);

        [NonAction]
        public override System.Web.Mvc.ActionResult Building(bool forceQuery)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Building);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "forceQuery", forceQuery);
            BuildingOverride(callInfo, forceQuery);
            return callInfo;
        }

        [NonAction]
        partial void BuildingMobileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult BuildingMobile()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.BuildingMobile);
            BuildingMobileOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void PalletOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string context, bool forceQuery);

        [NonAction]
        public override System.Web.Mvc.ActionResult Pallet(string context, bool forceQuery)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Pallet);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "context", context);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "forceQuery", forceQuery);
            PalletOverride(callInfo, context, forceQuery);
            return callInfo;
        }

        [NonAction]
        partial void AcceptPalletOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, DcmsMobile.PieceReplenish.ViewModels.PalletViewModel pvm);

        [NonAction]
        public override System.Web.Mvc.ActionResult AcceptPallet(DcmsMobile.PieceReplenish.ViewModels.PalletViewModel pvm)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AcceptPallet);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pvm", pvm);
            AcceptPalletOverride(callInfo, pvm);
            return callInfo;
        }

        [NonAction]
        partial void CartonOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string serializedContext, string palletId, char sound);

        [NonAction]
        public override System.Web.Mvc.ActionResult Carton(string serializedContext, string palletId, char sound)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Carton);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "serializedContext", serializedContext);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "palletId", palletId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sound", sound);
            CartonOverride(callInfo, serializedContext, palletId, sound);
            return callInfo;
        }

        [NonAction]
        partial void PullCartonOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, DcmsMobile.PieceReplenish.ViewModels.CartonViewModel cvm);

        [NonAction]
        public override System.Web.Mvc.ActionResult PullCarton(DcmsMobile.PieceReplenish.ViewModels.CartonViewModel cvm)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PullCarton);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "cvm", cvm);
            PullCartonOverride(callInfo, cvm);
            return callInfo;
        }

        [NonAction]
        partial void SkipCartonOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string serializedContext, string palletId, string sourceLocationId, string cartonId);

        [NonAction]
        public override System.Web.Mvc.ActionResult SkipCarton(string serializedContext, string palletId, string sourceLocationId, string cartonId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SkipCarton);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "serializedContext", serializedContext);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "palletId", palletId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sourceLocationId", sourceLocationId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "cartonId", cartonId);
            SkipCartonOverride(callInfo, serializedContext, palletId, sourceLocationId, cartonId);
            return callInfo;
        }

        [NonAction]
        partial void MoveCartonToSuspenseOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, DcmsMobile.PieceReplenish.ViewModels.SkipCartonViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult MoveCartonToSuspense(DcmsMobile.PieceReplenish.ViewModels.SkipCartonViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MoveCartonToSuspense);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            MoveCartonToSuspenseOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void SetPriorityOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string buildingId, string pickAreaId, int skuId, bool setHighPriorityFlag);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetPriority(string buildingId, string pickAreaId, int skuId, bool setHighPriorityFlag)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetPriority);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "buildingId", buildingId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pickAreaId", pickAreaId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "skuId", skuId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "setHighPriorityFlag", setHighPriorityFlag);
            SetPriorityOverride(callInfo, buildingId, pickAreaId, skuId, setHighPriorityFlag);
            return callInfo;
        }

        [NonAction]
        partial void DiscardPalletSuggestionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string pullerName, string palletId);

        [NonAction]
        public override System.Web.Mvc.ActionResult DiscardPalletSuggestion(string pullerName, string palletId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DiscardPalletSuggestion);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "pullerName", pullerName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "palletId", palletId);
            DiscardPalletSuggestionOverride(callInfo, pullerName, palletId);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114

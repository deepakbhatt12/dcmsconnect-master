// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace DcmsMobile.Receiving.Areas.Receiving.Home
{
    public partial class HomeController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected HomeController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Search()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Search);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CreateProcess()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateProcess);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CreateUpdateProcess()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateUpdateProcess);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Receiving()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Receiving);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Tutorial()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Tutorial);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult HandleCartonScan()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HandleCartonScan);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GetPalletHtml()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPalletHtml);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UnPalletizeCarton()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UnPalletizeCarton);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PrintCarton()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PrintCarton);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CloseShipment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CloseShipment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ReOpenShipment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReOpenShipment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetCarriers()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetCarriers);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public HomeController Actions { get { return MVC_Receiving.Receiving.Home; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Receiving";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Home";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Home";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Search = "Search";
            public readonly string CreateProcess = "CreateProcess";
            public readonly string CreateUpdateProcess = "CreateUpdateProcess";
            public readonly string Receiving = "Receiving";
            public readonly string Tutorial = "Tutorial";
            public readonly string HandleCartonScan = "HandleCartonScan";
            public readonly string GetPalletHtml = "GetPalletHtml";
            public readonly string UnPalletizeCarton = "UnPalletizeCarton";
            public readonly string PrintCarton = "PrintCarton";
            public readonly string GetPrinters = "GetPrinters";
            public readonly string ShipmentList = "ShipmentList";
            public readonly string CloseShipment = "CloseShipment";
            public readonly string ReOpenShipment = "ReOpenShipment";
            public readonly string GetCarriers = "GetCarriers";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Search = "Search";
            public const string CreateProcess = "CreateProcess";
            public const string CreateUpdateProcess = "CreateUpdateProcess";
            public const string Receiving = "Receiving";
            public const string Tutorial = "Tutorial";
            public const string HandleCartonScan = "HandleCartonScan";
            public const string GetPalletHtml = "GetPalletHtml";
            public const string UnPalletizeCarton = "UnPalletizeCarton";
            public const string PrintCarton = "PrintCarton";
            public const string GetPrinters = "GetPrinters";
            public const string ShipmentList = "ShipmentList";
            public const string CloseShipment = "CloseShipment";
            public const string ReOpenShipment = "ReOpenShipment";
            public const string GetCarriers = "GetCarriers";
        }


        static readonly ActionParamsClass_Search s_params_Search = new ActionParamsClass_Search();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Search SearchParams { get { return s_params_Search; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Search
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_CreateProcess s_params_CreateProcess = new ActionParamsClass_CreateProcess();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateProcess CreateProcessParams { get { return s_params_CreateProcess; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateProcess
        {
            public readonly string processId = "processId";
        }
        static readonly ActionParamsClass_CreateUpdateProcess s_params_CreateUpdateProcess = new ActionParamsClass_CreateUpdateProcess();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateUpdateProcess CreateUpdateProcessParams { get { return s_params_CreateUpdateProcess; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateUpdateProcess
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_Receiving s_params_Receiving = new ActionParamsClass_Receiving();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Receiving ReceivingParams { get { return s_params_Receiving; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Receiving
        {
            public readonly string processId = "processId";
        }
        static readonly ActionParamsClass_Tutorial s_params_Tutorial = new ActionParamsClass_Tutorial();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Tutorial TutorialParams { get { return s_params_Tutorial; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Tutorial
        {
            public readonly string processId = "processId";
        }
        static readonly ActionParamsClass_HandleCartonScan s_params_HandleCartonScan = new ActionParamsClass_HandleCartonScan();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_HandleCartonScan HandleCartonScanParams { get { return s_params_HandleCartonScan; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_HandleCartonScan
        {
            public readonly string scanText = "scanText";
            public readonly string palletId = "palletId";
            public readonly string processId = "processId";
        }
        static readonly ActionParamsClass_GetPalletHtml s_params_GetPalletHtml = new ActionParamsClass_GetPalletHtml();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetPalletHtml GetPalletHtmlParams { get { return s_params_GetPalletHtml; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetPalletHtml
        {
            public readonly string palletId = "palletId";
            public readonly string processId = "processId";
        }
        static readonly ActionParamsClass_UnPalletizeCarton s_params_UnPalletizeCarton = new ActionParamsClass_UnPalletizeCarton();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UnPalletizeCarton UnPalletizeCartonParams { get { return s_params_UnPalletizeCarton; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UnPalletizeCarton
        {
            public readonly string cartonId = "cartonId";
            public readonly string processId = "processId";
        }
        static readonly ActionParamsClass_PrintCarton s_params_PrintCarton = new ActionParamsClass_PrintCarton();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PrintCarton PrintCartonParams { get { return s_params_PrintCarton; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PrintCarton
        {
            public readonly string cartonId = "cartonId";
            public readonly string printer = "printer";
        }
        static readonly ActionParamsClass_CloseShipment s_params_CloseShipment = new ActionParamsClass_CloseShipment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CloseShipment CloseShipmentParams { get { return s_params_CloseShipment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CloseShipment
        {
            public readonly string shipmentId = "shipmentId";
            public readonly string poId = "poId";
        }
        static readonly ActionParamsClass_ReOpenShipment s_params_ReOpenShipment = new ActionParamsClass_ReOpenShipment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ReOpenShipment ReOpenShipmentParams { get { return s_params_ReOpenShipment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ReOpenShipment
        {
            public readonly string shipmentId = "shipmentId";
            public readonly string poId = "poId";
        }
        static readonly ActionParamsClass_GetCarriers s_params_GetCarriers = new ActionParamsClass_GetCarriers();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetCarriers GetCarriersParams { get { return s_params_GetCarriers; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetCarriers
        {
            public readonly string term = "term";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _palletPartial = "_palletPartial";
                public readonly string Guided_Receiving = "Guided Receiving";
                public readonly string Guided_Receiving_ppsx = "Guided_Receiving_ppsx";
                public readonly string Index = "Index";
                public readonly string ProcessEditor = "ProcessEditor";
                public readonly string Receiving = "Receiving";
                public readonly string ShipmentList = "ShipmentList";
                public readonly string Tutorial = "Tutorial";
            }
            public readonly string _palletPartial = "~/Areas/Receiving/Home/_palletPartial.cshtml";
            public readonly string Guided_Receiving = "~/Areas/Receiving/Home/Guided Receiving.pps";
            public readonly string Guided_Receiving_ppsx = "~/Areas/Receiving/Home/Guided Receiving.ppsx";
            public readonly string Index = "~/Areas/Receiving/Home/Index.cshtml";
            public readonly string ProcessEditor = "~/Areas/Receiving/Home/ProcessEditor.cshtml";
            public readonly string Receiving = "~/Areas/Receiving/Home/Receiving.cshtml";
            public readonly string ShipmentList = "~/Areas/Receiving/Home/ShipmentList.cshtml";
            public readonly string Tutorial = "~/Areas/Receiving/Home/Tutorial.cshtml";
            static readonly _RepositoryClass s_Repository = new _RepositoryClass();
            public _RepositoryClass Repository { get { return s_Repository; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _RepositoryClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                public class _ViewNamesClass
                {
                }
            }
            static readonly _SoundsClass s_Sounds = new _SoundsClass();
            public _SoundsClass Sounds { get { return s_Sounds; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _SoundsClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                public class _ViewNamesClass
                {
                    public readonly string Error = "Error";
                    public readonly string success = "success";
                }
                public readonly string Error = "~/Areas/Receiving/Home/Sounds/Error.mp3";
                public readonly string success = "~/Areas/Receiving/Home/Sounds/success.mp3";
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_HomeController : DcmsMobile.Receiving.Areas.Receiving.Home.HomeController
    {
        public T4MVC_HomeController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SearchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Search(int? id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Search);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            SearchOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void CreateProcessOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? processId);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateProcess(int? processId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateProcess);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "processId", processId);
            CreateProcessOverride(callInfo, processId);
            return callInfo;
        }

        [NonAction]
        partial void CreateUpdateProcessOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, DcmsMobile.Receiving.Areas.Receiving.Home.ProcessEditorViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateUpdateProcess(DcmsMobile.Receiving.Areas.Receiving.Home.ProcessEditorViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateUpdateProcess);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            CreateUpdateProcessOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void ReceivingOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? processId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Receiving(int? processId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Receiving);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "processId", processId);
            ReceivingOverride(callInfo, processId);
            return callInfo;
        }

        [NonAction]
        partial void TutorialOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? processId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Tutorial(int? processId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Tutorial);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "processId", processId);
            TutorialOverride(callInfo, processId);
            return callInfo;
        }

        [NonAction]
        partial void HandleCartonScanOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string scanText, string palletId, int processId);

        [NonAction]
        public override System.Web.Mvc.ActionResult HandleCartonScan(string scanText, string palletId, int processId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HandleCartonScan);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "scanText", scanText);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "palletId", palletId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "processId", processId);
            HandleCartonScanOverride(callInfo, scanText, palletId, processId);
            return callInfo;
        }

        [NonAction]
        partial void GetPalletHtmlOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string palletId, int processId);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetPalletHtml(string palletId, int processId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPalletHtml);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "palletId", palletId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "processId", processId);
            GetPalletHtmlOverride(callInfo, palletId, processId);
            return callInfo;
        }

        [NonAction]
        partial void UnPalletizeCartonOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string cartonId, int processId);

        [NonAction]
        public override System.Web.Mvc.ActionResult UnPalletizeCarton(string cartonId, int processId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UnPalletizeCarton);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "cartonId", cartonId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "processId", processId);
            UnPalletizeCartonOverride(callInfo, cartonId, processId);
            return callInfo;
        }

        [NonAction]
        partial void PrintCartonOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string cartonId, string printer);

        [NonAction]
        public override System.Web.Mvc.ActionResult PrintCarton(string cartonId, string printer)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PrintCarton);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "cartonId", cartonId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "printer", printer);
            PrintCartonOverride(callInfo, cartonId, printer);
            return callInfo;
        }

        [NonAction]
        partial void GetPrintersOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetPrinters()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetPrinters);
            GetPrintersOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ShipmentListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ShipmentList()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ShipmentList);
            ShipmentListOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CloseShipmentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string shipmentId, long? poId);

        [NonAction]
        public override System.Web.Mvc.ActionResult CloseShipment(string shipmentId, long? poId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CloseShipment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "shipmentId", shipmentId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "poId", poId);
            CloseShipmentOverride(callInfo, shipmentId, poId);
            return callInfo;
        }

        [NonAction]
        partial void ReOpenShipmentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string shipmentId, long? poId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ReOpenShipment(string shipmentId, long? poId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReOpenShipment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "shipmentId", shipmentId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "poId", poId);
            ReOpenShipmentOverride(callInfo, shipmentId, poId);
            return callInfo;
        }

        [NonAction]
        partial void GetCarriersOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetCarriers(string term)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetCarriers);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            GetCarriersOverride(callInfo, term);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114

@model  DcmsMobile.Repack.ViewModels.RepackViewModel
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
    ViewBag.Title = Model.PageHeading; 
}
@using (Html.BeginForm(MVC_Repack.Repack.Home.RepackCarton(), FormMethod.Post, new
{
    id = "frmMain"
}))
{
    <div>
        @Html.HiddenFor(m => m.UiStyle)
        <div class="box property-widget">
            <h3>Inventory Areas</h3>
            <div id="divRepackMain" class="boxContent">
                @Html.EditorFor(m => m.SourceArea)
                @Html.EditorFor(m => m.DestinationArea, new { id = "ddlDestinationArea" })
                <div>
                    @Html.LabelFor(m => m.PalletId)
                    @Html.TextBoxFor(m => m.PalletId, new
           {
               id = "tbPalletId",
               maxlength = 20,
               style = "text-transform: uppercase;"
           }) <sup class="ui-helper-hidden">*</sup>
                    @Html.ValidationMessageFor(m => m.PalletId)
                    <br />
                    <span class="ui-priority-secondary">Pallet ID is required when the <em>Destination Area</em>
                        is a pallet area.</span>
                </div>
            </div>
        </div>
        <div class="box property-widget" id="divCartonproperties" style="width: 40em">
            <h3>Carton Properties</h3>
            <div class="boxContent">
                @Html.EditorFor(m => m.VwhId)
                @Html.EditorFor(m => m.PriceSeasonCode)
                @Html.EditorFor(m => m.QualityCode)
                @Html.LabelFor(m => m.SewingPlantCode) @Html.DropDownListFor(m => m.SewingPlantCode, Model.SewingPlantCode_List, "(Please Select)", new { id = "ddlSewingPlant" })
                @if (ModelMetadata.FromLambdaExpression(m => m.SewingPlantCode, ViewData).IsRequired)
                {
                    <span>*</span>
                    <br />
                    @Html.ValidationMessageFor(m => m.SewingPlantCode)
                }
                <br />
                @Html.EditorFor(m => m.ShipmentId)
            </div>
        </div>
        <div class="box property-widget" id="divBehavior">
            <h3>Behavior</h3>
            <div class="boxContent">
                @Html.EditorFor(m => m.PrinterName, new { id = "ddlPrinterName" })
                @Html.EditorFor(m => m.AllowCartonScan, new { id = "cbScanCarton" })
            </div>
        </div>
        <div class="ui-helper-clearfix">
        </div>
    </div>
}
<button type="button" id="btnRepack" style="clear: both">
    Repack...</button>
<div id="divCreate">
    <div id="sound">
        <embed src="@Links_Repack.Areas.Repack.Content.Sounds.Ding_wav" autostart="false" hidden="hidden" height="0" width="0" />
    </div>
    @using (Html.BeginForm(MVC_Repack.Repack.Home.RepackCarton(), FormMethod.Post, new
    {
        id = "frmCreate"
    }))
    { 
        <div id="divCartonId">
            @Html.EditorFor(m => m.CartonId, new { id = "tbCartonId" })
            <sup>*</sup>
        </div>
        @Html.EditorForModel()
        <div id="divNoOfCartons">
            @Html.EditorFor(m => m.NumberOfCartons, new { id = "tbNoOfCartons" })
        </div>
        <blockquote>
            <p>
                @Html.EditorFor(m => m.ConvertSku, new { id = "cbConversion" })
            </p>
            <div id="divConversion">
                <label for="tbtargetUpc">
                    Target SKU</label>
                @Html.TextBoxFor(m => m.TargetSkuBarCode, new
                {
                   id="tbtargetUpc",
                   size=15,
                   maxlength=20,
                   data_url= Url.Action(MVC_Repack.Repack.AutoComplete.SkuAutocomplete())
                })                
                <sup>&darr;*</sup><br />
                @Html.ValidationMessageFor(m => m.TargetSkuBarCode)
                <strong><label for="tbtargetUpc" style="color:green;font-size:medium;font-style:italic;" data-valmsg-for="tbtargetUpc"></label></strong>
                @Html.EditorFor(m => m.TargetVwhId, new { id = "ddltargetVwhId" })
                @Html.EditorFor(m => m.TargetQualityCode, new { id = "ddltargetQuality" })
            </div>
        </blockquote>
        <div id="ajaxErrors">
        </div>@*
        <script>
            $(document).ready(function () {

                $('#tbtargetUpc').keydown(function (e) {
                    if (e.keyCode === $.ui.keyCode.ENTER) {
                        $(this).valid();   // Ask remote validator to validate and then check whether entry was valid
                        if ($(this).valid()) {
                            setTimeout(function () {
                                // Due to sounds, we must set the focus after minimal delay
                                $('#ddltargetVwhId').focus();
                            }, 0);
                        }
                        return false;
                    }
                });

                $('#ddltargetVwhId').keydown(function (e) {
                    if (e.keyCode === $.ui.keyCode.ENTER) {
                        $(this).valid();   // Ask remote validator to validate and then check whether entry was valid
                        if ($(this).valid()) {
                            setTimeout(function () {
                                // Due to sounds, we must set the focus after minimal delay
                                $('#ddltargetQuality').focus();
                            }, 0);
                        }
                        return false;
                    }
                });
            });
        </script>*@
    }
</div>
@section scripts {
    <script src="@Links_Repack.Areas.Repack.Scripts.Repack_all_js" type="text/javascript"></script>
    <style>
        #tbCartonId {
            text-transform: uppercase;
        }
    </style>
}
@*$Id$*@ 
@model DcmsMobile.Shipping.ViewModels.BolViewModel
@{
    ViewBag.Title = "Bill of Ladings";
    int i;
}
<p>
    <span class="ui-icon ui-icon-lightbulb" style="display: inline-block"></span>
    You can associate these BOLs with existing appointments. Click/drag to select BOL. Then Assign the selected group to an appointment. 
    System helps in selecting matching BOLs and appointments.
</p>
@using (Html.BeginForm(MVC_Shipping.Shipping.Home.Bol(), FormMethod.Get, new
{
    id = "frmShowScheduled"
}))
{
    <blockquote>
        @Html.CheckBoxFor(m => m.ShowScheduledAlso, new { id = "cbShowScheduled" })
        <label for="cbShowScheduled">
            Include BOLs which have already been assigned to an appointment
        </label>
        <input type = "hidden" name = "@Model.NameFor(m => m.PostedCustomerId)" value = "@Model.Summary.CustomerId" />
    </blockquote>
}
@if (Model.AssignedBolCount.HasValue)
{
    <div class="ui-state-highlight">
        @Html.DisplayFor(m => m.AssignedBolCount)<span>BOLs assigned to</span>
        @Html.ActionLink(string.Format("appointment # {0}", Model.AssignedAppointmentNumber), MVC_Shipping.Shipping.Home.AllAppointments(new DcmsMobile.Shipping.ViewModels.AppointmentViewModel { AppointmentId = Model.AssignedAppointmentId }))
    </div>
}
@Html.ValidationSummary(true)
@Html.StatusSummary()
<div id="dlgCalendar">
    <div id="calendar" data-event-source="@Url.Action(MVC_Shipping.Shipping.Home.GetAppointmentsForBol())" 
        data-start-param="@MVC_Shipping.Shipping.Home.GetAppointmentsForBolParams.start"
        data-end-param="@MVC_Shipping.Shipping.Home.GetAppointmentsForBolParams.end"
        data-create-url="@Url.Action(MVC_Shipping.Shipping.Home.CreateUpdateAppointment())">
    </div>

    @using (Html.BeginForm(MVC_Shipping.Shipping.Home.AssignAppointmentToBol(), FormMethod.Post, new
{
    id = "frmBol"
}))
    {
        <div>
            <input type="hidden" name="@Model.NameFor(m => m.InitialAppointment.id)"  id="hfAppointmentId"  />
            <input type="hidden" name = "@Model.NameFor(m => m.PostedCustomerId)" value = "@Model.Summary.CustomerId" />
            <input type="hidden" name = "@Model.NameFor(m => m.AssignFlag)" id="hfAssignFlag" />
        </div> 
    }
</div>
<button type="button" id="btnAppointments">
    Assign to Appointment...</button>
@Html.ActionLink("Start Over", MVC_Shipping.Shipping.Home.Bol(new DcmsMobile.Shipping.ViewModels.BolViewModel(Model.Summary.CustomerId, null, null)))

<div id="divAjaxError">
</div>
<div>
    <table style="width: 100%">
        <caption>BOLs</caption>
        <thead>
            <tr>
                <th>#
                </th>
                <th>
                    <input type="checkbox" title="Select All/Clear" />&nbsp;&nbsp;BOL
                    <span style="display: inline-block" class="ui-icon ui-icon-extlink" title="Link avilable with each BOL that provide their details"></span>
                </th>
                <th>Carrier
                </th>
                <th>PickUp Date
                </th>
                <th>Ship From
                </th>
                <th>DC
                </th>
                <th># PO
                </th>
                <th>DC Cancel Date
                </th>
                <th>Created On
                </th>
                <th>Created By
                </th>
                <th>Modify
                </th>
            </tr>
        </thead>
        <tbody id="tbody">
            @{
                i = 0;
            }
            @foreach (var row in Model.Bols)
            {
                <tr class="@(i % 2 == 0 ? "rowA" : "rowB") @(Model.InitialAppointment != null && Model.InitialAppointment.id == row.Appointment.id ? "ui-selected" : "") @(Model.BolAtsDate != null && row.BolAtsDate != null && Model.BolAtsDate== row.BolAtsDate ? "ui-state-highlight" : "")"
                   data-shippingid="@row.ShippingId" >
                    <td>
                        @( i + 1)
                    </td>
                    <td style="white-space: nowrap" class="data-shippingid">
                        <a href= "@string.Format("{0}?shipping_id={1}", Model.BOLsDetailUrl, row.ShippingId)" target="_report" title="BOLs Detail Report:110.21">@row.ShippingId</a>
                        @if (row.EdiId == null)
                        {
                            <span class="ui-icon ui-icon-alert" style="display: inline-block" title="@string.Format("BOL {0} is not routed", row.ShippingId)"></span>
                        }
                        <input type="checkbox" class="ui-helper-hidden" name='@ReflectionHelpers.NameFor((DcmsMobile.Shipping.ViewModels.BolViewModel m) => m.SelectedBols)' value="@row.ShippingId"@(Model.InitialAppointment != null && Model.InitialAppointment.id == row.Appointment.id ? "checked" : "")  />
                    </td>
                    <td>
                        @row.Appointment.CarrierDisplay
                    </td>
                    <td style="white-space: nowrap">
                        <span>@row.PickUpDateDisplay</span>
                    </td>
                    <td>
                        @row.Appointment.BuildingId
                    </td>
                    <td>
                        @row.CustomerDcId
                    </td>
                    <td style="text-align: right">
                        @row.PoCount
                    </td>
                    <td style="white-space: nowrap">
                        @row.DcCancelDateDisplay
                    </td>
                    <td style="white-space: nowrap">
                        @row.BolCreatedOnDisplay
                    </td>
                    <td>
                        @row.BolCreatedBy
                    </td>
                    <td style="text-align: center">
                        <a class="ui-icon ui-icon-close" style="display: inline-block" title="Delete BOL:@string.Format("{0}", row.ShippingId)" data-url-delete="@Url.Action(MVC_Shipping.Shipping.Home.DeleteBol(Model.PostedCustomerId,"X"))"></a>
                        @if (row.IsScheduled)
                        {
                            <a class="ui-icon ui-icon-calendar" style="display: inline-block;text-align: center;" title="@string.Format("BOL is assigned to appointment # {0} with {1},Click here to unassign it.", row.Appointment.AppointmentNumber,row.Appointment.title)"></a>
                        }
                    </td>
                </tr>
                        ++i;
            }
        </tbody>
    </table>
</div>
@section sidebar
{
    <div id="popup" class="ui-widget-content" style="width: 15em; display: none; font-size: 1.2em; vertical-align: middle; padding-left: 1mm; z-index: 2000">
        <span></span>for <span data-for="title"></span>
        <br />
        <a href="#">Select</a>&nbsp;<span class="ui-icon ui-icon-close" style="display: inline-block; cursor: pointer"></span>
    </div>
    <h3>Legend</h3>
    <div class="boxContent">
        <span class="ui-icon ui-icon-info" style="display: inline-block"></span>Displays against a pickup date when considering Ats date as pickup date.
    </div>
    @if (Model.Bols.Any(p => p.EdiId == null) || Model.Bols.Any(p => p.NumberOfPickupDates > 1))
    {
        <div class="box">
            <div class="boxContent">
                <span class="ui-icon ui-icon-alert" style="display: inline-block"></span>Displays against unusual cases in some way. Check the tooltip for more information.
            </div>
        </div>
    }
    <div class="boxContent">
        <span class="ui-icon ui-icon-calendar" style="display: inline-block"></span>Displays when BOL is assigned to appointment.To unassign appointment click on it.
    </div>
}
@section scripts {
    <script type='text/javascript' src="@Links_Shipping.Areas.Shipping.Home.Scripts.fullcalendar_js"></script>
    <link href="@Links_Shipping.Areas.Shipping.Home.Appointment_css" rel="stylesheet" type="text/css" />
    <script src="@Links_Shipping.Areas.Shipping.Home.Scripts.Bol_js" type="text/javascript"></script>
    <script type="text/javascript">
        // Script looks at this variable to determine the initial date to show in the calendar dialog
        var _initialAppointment = eval(@Model.JsonInitialAppointment);
        var _appointments = eval(@Model.JsonAppointments);
    </script>
    <style type="text/css">
        a.ui-icon-close, a.ui-icon-calendar {
            cursor: pointer;
        }

        div.dlg-appointment {
            position: fixed!important;
        }

        .fc-event-time {
            white-space: nowrap;
        }

        .fc-event-title {
            display: block;
        }

        .text-changed {
            text-decoration: line-through;
        }
    </style>
}
